Trail name: robot1_same_task_iter0
Make sure that you turned off snopt log and constraint jacobian writing.
Proceed? (Y/N)
Continue constructing the problem...
../dairlib_data/goldilocks_models/find_models/robot_1/ is a directory

Tasks settings:
duration = 0.4
N_sample_sl = 3
N_sample_gi = 3
delta_stride_length = 0.015
stride_length_0 = 0.2
delta_ground_incline = 0.05
ground_incline_0 = 0
stride length ranges from 0.1775 to 0.2225
ground incline ranges from -0.075 to 0.075

Optimization setting (outer loop):
Gradient descent method
Stochastic
Step size = 0.001
beta_momentum = 0.8
eps_regularization = 1e-08
is_add_tau_in_cost = 1
Non-zero touchdown impact
# of re-run in each iteration = 1
Failure rate threshold before seeing a all-success iteration = 0.2
method_to_solve_system_of_equations = 3
The maximum rate the cost can increase before shrinking step size = 0.15
The maximum rate the cost can increase before asking adjacent samples for help = 0.1
The maximum cost difference rate between two adjacent samples = 0.1

Optimization setting (inner loop):
max_inner_iter = 150
major_optimality_tolerance = 0.0001
major_feasibility_tolerance = 0.0001
n_node = 20

Reduced-order model setting:
Warning: Need to make sure that the implementation in DynamicsExpression agrees with n_s and n_tau.
n_s = 1, n_tau = 0
B_tau = 

rom_option = 2 (1D -- fix com vertical acceleration)
Make sure that n_s and B_tau are correct.
Proceed? (Y/N)
Continue constructing the problem...
n_feature_s = 70
n_feature_sDDot = 6
Make sure that you use the right initial theta.
Proceed? (Y/N)
Continue constructing the problem...

Multithreading settings:
is multithread? 1
# of threads to be used 4

Removing old thread_finished.csv files... Done.

Other settings:
is_debug? 0
is_manual_initial_theta = 0
has_been_all_success? 0
iteration #0 is a rerun? 1
adjacent_sample_indices = 
 1  0  1  0  1  2  3  4  5
 3  2  5  4  3  4  7  6  7
-1  4 -1  6  5  8 -1  8 -1
-1 -1 -1 -1  7 -1 -1 -1 -1

Start iterating...
Current time: Thu Apr  9 20:53:19 2020
************ Iteration 0 *************
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  0 (0) | 0.185000 | -0.050000 | 0_0_w.csv | SolutionFound | 13.206264 | 2.246009 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.47965
cost_u = 0.396113
cost_lambda = 0.000219959
cost_lambda_diff = 0.0629415
cost_vel_diff = 0.0407306
cost_u_diff = 0.00652742
cost_q_hip_roll = 0.236081
cost_q_hip_yaw = 0.0042187
cost_q_quat_xyz = 0.019531
total_cost (only the nominal traj cost terms) = 2.24601
  3 (0) | 0.185000 | 0.000000 | 0_3_w.csv | SolutionFound | 16.293827 | 2.172211 (0.000000)
  1 (0) | 0.200000 | -0.050000 | 0_1_w.csv | SolutionFound | 16.665882 | 2.273466 (0.000000)
  2 (0) | 0.215000 | -0.050000 | 0_2_w.csv | SolutionFound | 17.272518 | 2.387770 (0.000000)
  4 (0) | 0.200000 | 0.000000 | 0_4_w.csv | SolutionFound | 15.871456 | 2.244441 (0.000000)
  5 (0) | 0.215000 | 0.000000 | 0_5_w.csv | SolutionFound | 16.227838 | 2.365245 (0.000000)
  6 (0) | 0.185000 | 0.050000 | 0_6_w.csv | SolutionFound | 16.411889 | 2.216339 (0.000000)
  7 (0) | 0.200000 | 0.050000 | 0_7_w.csv | SolutionFound | 16.281353 | 2.277640 (0.000000)
  8 (0) | 0.215000 | 0.050000 | 0_8_w.csv | SolutionFound | 16.854485 | 2.304700 (0.000000)
  0 (1) | 0.185000 | -0.050000 | 0_0_w.csv | SolutionFound | 14.538127 | 2.246009 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.47965
cost_u = 0.396113
cost_lambda = 0.000219959
cost_lambda_diff = 0.0629415
cost_vel_diff = 0.0407306
cost_u_diff = 0.00652742
cost_q_hip_roll = 0.236081
cost_q_hip_yaw = 0.0042187
cost_q_quat_xyz = 0.019531
total_cost (only the nominal traj cost terms) = 2.24601
  1 (1) | 0.200000 | -0.050000 | 0_1_w.csv | SolutionFound | 14.605966 | 2.273469 (0.000000)
  3 (1) | 0.185000 | 0.000000 | 0_3_w.csv | SolutionFound | 13.894152 | 2.172210 (0.000000)
  4 (1) | 0.200000 | 0.000000 | 0_4_w.csv | SolutionFound | 14.329912 | 2.244440 (0.000000)
  6 (1) | 0.185000 | 0.050000 | 0_6_w.csv | SolutionFound | 14.174413 | 2.216338 (0.000000)
  5 (1) | 0.215000 | 0.000000 | 0_5_w.csv | SolutionFound | 16.844244 | 2.362603 (0.000000)
  2 (1) | 0.215000 | -0.050000 | 0_2_w.csv | SolutionFound | 24.647494 | 2.381940 (0.000000)
  8 (1) | 0.215000 | 0.050000 | 0_8_w.csv | SolutionFound | 11.597352 | 2.303930 (0.000000)
  7 (1) | 0.200000 | 0.050000 | 0_7_w.csv | SolutionFound | 13.143050 | 2.276924 (0.000000)
Current time: Thu Apr  9 20:54:37 2020
************ Iteration 1 *************
theta_sDDot.head(6) = 0 0 0 0 0 0
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  1 (0) | 0.202210 | -0.033722 | 0_1_w.csv | SolutionFound | 130.925598 | 2.776253 (0.000000)
  4 (0) | 0.204805 | 0.016327 | 0_4_w.csv | SolutionFound | 105.025276 | 2.708397 (0.000000)
  2 (0) | 0.213567 | -0.051865 | 0_2_w.csv | SolutionFound | 308.650654 | 2.932449 (0.000000)
  3 (0) | 0.186180 | -0.015917 | 0_3_w.csv | SolutionFound | 354.413161 | 2.756373 (0.000000)
  0 (0) | 0.189311 | -0.041849 | 0_0_w.csv | SolutionFound | 378.671093 | 2.763826 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.64102
cost_u = 0.437421
cost_lambda = 0.00022924
cost_lambda_diff = 0.0654072
cost_vel_diff = 0.0797236
cost_u_diff = 0.00946132
cost_q_hip_roll = 0.235662
cost_q_hip_yaw = 0.00175519
cost_q_quat_xyz = 0.022696
total_cost (only the nominal traj cost terms) = 2.49338
  5 (0) | 0.220722 | 0.019981 | 0_5_w.csv | SolutionFound | 174.469224 | 2.927075 (0.000000)
  6 (0) | 0.181173 | 0.027207 | 0_6_w.csv | SolutionFound | 152.647695 | 2.710399 (0.000000)
  1 (1) | 0.202210 | -0.033722 | 1_1_w.csv | SolutionFound | 27.171215 | 2.776253 (0.000000)
  8 (0) | 0.208230 | 0.042352 | 0_8_w.csv | SolutionFound | 107.660396 | 2.742016 (0.000000)
  7 (0) | 0.195070 | 0.062720 | 0_7_w.csv | SolutionFound | 144.060159 | 2.746540 (0.000000)
  4 (1) | 0.204805 | 0.016327 | 1_4_w.csv | SolutionFound | 24.734839 | 2.708397 (0.000000)
  2 (1) | 0.213567 | -0.051865 | 1_2_w.csv | SolutionFound | 35.598235 | 2.925583 (0.000000)
  0 (1) | 0.189311 | -0.041849 | 1_0_w.csv | SolutionFound | 33.814735 | 2.762670 (0.000000)
  5 (1) | 0.220722 | 0.019981 | 1_5_w.csv | SolutionFound | 26.511906 | 2.927072 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.58587
cost_u = 0.436712
cost_lambda = 0.000229079
cost_lambda_diff = 0.0653486
cost_vel_diff = 0.0796155
cost_u_diff = 0.00945317
cost_q_hip_roll = 0.29182
cost_q_hip_yaw = 0.00183964
cost_q_quat_xyz = 0.0215195
total_cost (only the nominal traj cost terms) = 2.49241
  6 (1) | 0.181173 | 0.027207 | 1_6_w.csv | SolutionFound | 25.472517 | 2.710398 (0.000000)
  8 (1) | 0.208230 | 0.042352 | 1_8_w.csv | SolutionFound | 26.206839 | 2.742013 (0.000000)
  7 (1) | 0.195070 | 0.062720 | 1_7_w.csv | SolutionFound | 33.946492 | 2.743454 (0.000000)
  3 (1) | 0.186180 | -0.015917 | 1_3_w.csv | SolutionFound | 109.742033 | 2.720941 (0.000000)

Time spent on reading files of sample evaluation: 3 seconds

total_cost = 2.77964 (min so far: 2.77964)


Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
1 | SolutionFound | -0.253001 | 887.583 | -0.486127
3 | SolutionFound | -0.264223 | 908.656 | -0.509984
0 | SolutionFound | -0.296585 | 975.367 | -0.563418
2 | SolutionFound | -0.468708 | 1007.56 | -0.916408
4 | SolutionFound | -0.290212 | 916.723 | -0.563211
6 | SolutionFound | -0.0544604 | 617.115 | -0.0736009
7 | SolutionFound | -0.304032 | 814.639 | -0.585456
5 | SolutionFound | -0.498073 | 777.395 | -0.960933
8 | SolutionFound | -0.333566 | 795.672 | -0.64586
Time spent on extracting active (and independent rows) of A: 75 seconds

sample # | max element of abs-Pi | qi norm (this number should be close to 0)
1 | 176742151.672649 | 257.365749
3 | 151411972.373314 | 205.504100
2 | 185915641.976622 | 610.262691
0 | 161481834.555212 | 326.527344
6 | 188105382.889015 | 611.141723
4 | 142725782.313570 | 431.108951
7 | 170148374.673979 | 333.612845
5 | 188425491.283846 | 437.921700
8 | 137590622.838492 | 447.226413
Time spent on getting w in terms of theta: 280 seconds

Calculating gradient
gradient_cost norm: 312358

lambda_square = 0.468378
step_direction norm: 312358

step size = 3.20145e-09



Trail name: robot1_same_task_iter2
Make sure that you turned off snopt log and constraint jacobian writing.
Proceed? (Y/N)
Continue constructing the problem...
../dairlib_data/goldilocks_models/find_models/robot_1/ is a directory

Tasks settings:
duration = 0.4
N_sample_sl = 3
N_sample_gi = 3
delta_stride_length = 0.015
stride_length_0 = 0.2
delta_ground_incline = 0.05
ground_incline_0 = 0
stride length ranges from 0.1775 to 0.2225
ground incline ranges from -0.075 to 0.075

Optimization setting (outer loop):
Gradient descent method
Stochastic
Step size = 0.001
beta_momentum = 0.8
eps_regularization = 1e-08
is_add_tau_in_cost = 1
Non-zero touchdown impact
# of re-run in each iteration = 1
Failure rate threshold before seeing a all-success iteration = 0.2
method_to_solve_system_of_equations = 3
The maximum rate the cost can increase before shrinking step size = 0.15
The maximum rate the cost can increase before asking adjacent samples for help = 0.1
The maximum cost difference rate between two adjacent samples = 0.1

Optimization setting (inner loop):
max_inner_iter = 150
major_optimality_tolerance = 0.0001
major_feasibility_tolerance = 0.0001
n_node = 20

Reduced-order model setting:
Warning: Need to make sure that the implementation in DynamicsExpression agrees with n_s and n_tau.
n_s = 1, n_tau = 0
B_tau = 

rom_option = 2 (1D -- fix com vertical acceleration)
Make sure that n_s and B_tau are correct.
Proceed? (Y/N)
Continue constructing the problem...
n_feature_s = 70
n_feature_sDDot = 6

Multithreading settings:
is multithread? 1
# of threads to be used 4

Removing old thread_finished.csv files... Done.

Other settings:
is_debug? 0
is_manual_initial_theta = 0
ave_min_cost_so_far = 2.79879
has_been_all_success? 1
iteration #2 is a rerun? 1
Reading previous step direction... (will get memory issue if the file doesn't exist)
Reading previous step size... (will get memory issue if the file doesn't exist)
adjacent_sample_indices = 
 1  0  1  0  1  2  3  4  5
 3  2  5  4  3  4  7  6  7
-1  4 -1  6  5  8 -1  8 -1
-1 -1 -1 -1  7 -1 -1 -1 -1

Start iterating...
Current time: Thu Apr  9 21:13:28 2020
************ Iteration 2 *************
theta_sDDot.head(6) = -5.46134e-06 -5.16586e-06  1.45031e-08 -4.88812e-06  1.40864e-08 -2.92858e-09
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  3 (0) | 0.179046 | 0.007925 | 2_3_w.csv | SolutionFound | 21.752374 | 2.555263 (0.000000)
  1 (0) | 0.196943 | -0.056471 | 2_1_w.csv | SolutionFound | 21.782162 | 2.605276 (0.000000)
  0 (0) | 0.191824 | -0.046056 | 2_0_w.csv | SolutionFound | 21.887056 | 2.557948 (0.000000)
  2 (0) | 0.217491 | -0.057423 | 2_2_w.csv | SolutionFound | 22.300949 | 2.607570 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.5469
cost_u = 0.421281
cost_lambda = 0.000180002
cost_lambda_diff = 0.0381168
cost_vel_diff = 0.0646849
cost_u_diff = 0.00821086
cost_q_hip_roll = 0.238976
cost_q_hip_yaw = 0.00322968
cost_q_quat_xyz = 0.0201904
total_cost (only the nominal traj cost terms) = 2.34177
  4 (0) | 0.203385 | -0.020323 | 2_4_w.csv | SolutionFound | 24.073659 | 2.514226 (0.000000)
  6 (0) | 0.183032 | 0.038875 | 2_6_w.csv | SolutionFound | 24.117355 | 2.514952 (0.000000)
  7 (0) | 0.206875 | 0.042124 | 2_7_w.csv | SolutionFound | 24.655674 | 2.585994 (0.000000)
  5 (0) | 0.207545 | 0.017410 | 2_5_w.csv | SolutionFound | 32.355760 | 2.594307 (0.000000)
  0 (1) | 0.191824 | -0.046056 | 2_0_w.csv | SolutionFound | 23.773667 | 2.557948 (0.000000)
  8 (0) | 0.221607 | 0.049308 | 2_8_w.csv | SolutionFound | 24.055923 | 2.629500 (0.000000)
  2 (1) | 0.217491 | -0.057423 | 2_2_w.csv | SolutionFound | 24.860504 | 2.607570 (0.000000)
  1 (1) | 0.196943 | -0.056471 | 2_1_w.csv | SolutionFound | 32.386091 | 2.603824 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.5469
cost_u = 0.421281
cost_lambda = 0.000180002
cost_lambda_diff = 0.0381168
cost_vel_diff = 0.0646849
cost_u_diff = 0.00821086
cost_q_hip_roll = 0.238976
cost_q_hip_yaw = 0.00322968
cost_q_quat_xyz = 0.0201904
total_cost (only the nominal traj cost terms) = 2.34177
  4 (1) | 0.203385 | -0.020323 | 2_4_w.csv | SolutionFound | 23.340521 | 2.514226 (0.000000)
  3 (1) | 0.179046 | 0.007925 | 2_3_w.csv | SolutionFound | 23.904331 | 2.555263 (0.000000)
  6 (1) | 0.183032 | 0.038875 | 2_6_w.csv | SolutionFound | 24.509280 | 2.514952 (0.000000)
  7 (1) | 0.206875 | 0.042124 | 2_7_w.csv | SolutionFound | 24.619978 | 2.585994 (0.000000)
  8 (1) | 0.221607 | 0.049308 | 2_8_w.csv | SolutionFound | 17.571283 | 2.629500 (0.000000)
  5 (1) | 0.207545 | 0.017410 | 2_5_w.csv | SolutionFound | 17.823055 | 2.594305 (0.000000)

Time spent on reading files of sample evaluation: 3 seconds

total_cost = 2.57373 (min so far: 2.57373)


Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
0 | SolutionFound | -0.181756 | 818.411 | -0.348171
2 | SolutionFound | -0.186981 | 861.92 | -0.354199
3 | SolutionFound | -0.239337 | 1227.16 | -0.464828
1 | SolutionFound | -0.235073 | 1370.68 | -0.453405
7 | SolutionFound | -0.180874 | 896.221 | -0.343953
6 | SolutionFound | -0.176115 | 1002.05 | -0.337447
4 | SolutionFound | -0.16283 | 767.03 | -0.31279
5 | SolutionFound | -0.233863 | 1279.4 | -0.451235
8 | SolutionFound | -0.178969 | 891.795 | -0.337918
Time spent on extracting active (and independent rows) of A: 72 seconds

sample # | max element of abs-Pi | qi norm (this number should be close to 0)
3 | 114083947.916546 | 1009.118103
1 | 117877782.085134 | 1193.039001
2 | 131157546.206989 | 437.907338
0 | 157574128.094868 | 430.355926
7 | 144207464.656094 | 503.342293
4 | 160577035.226285 | 340.721627
6 | 146794647.668792 | 734.509210
5 | 141707734.770136 | 1104.901297
8 | 147353983.973235 | 518.146357
Time spent on getting w in terms of theta: 271 seconds

Calculating gradient
gradient_cost norm: 220732

lambda_square = 0.291991
step_direction norm: 464523

step size = 2.15275e-09

Trail name: robot1_same_task_iter3
Make sure that you turned off snopt log and constraint jacobian writing.
Proceed? (Y/N)
Y
[2020-04-09 21:35:09.486] [console] [warning] Currently MultibodyPlant does not handle joint limits for continuous models. However some joints do specify limits. Consider setting a non-zero time step in the MultibodyPlant constructor; this will put MultibodyPlant in discrete-time mode, which does support joint limits.
[2020-04-09 21:35:09.486] [console] [warning] Joints that specify limits are: `hip_roll_left`, `hip_roll_right`, `hip_yaw_left`, `hip_yaw_right`, `hip_pitch_left`, `hip_pitch_right`, `knee_left`, `knee_right`, `ankle_joint_left`, `ankle_joint_right`, `toe_left`, `toe_right`.
[2020-04-09 21:35:09.487] [console] [warning] Currently MultibodyPlant does not handle joint limits for continuous models. However some joints do specify limits. Consider setting a non-zero time step in the MultibodyPlant constructor; this will put MultibodyPlant in discrete-time mode, which does support joint limits.
[2020-04-09 21:35:09.487] [console] [warning] Joints that specify limits are: `hip_roll_left`, `hip_roll_right`, `hip_yaw_left`, `hip_yaw_right`, `hip_pitch_left`, `hip_pitch_right`, `knee_left`, `knee_right`, `ankle_joint_left`, `ankle_joint_right`, `toe_left`, `toe_right`.
Continue constructing the problem...
../dairlib_data/goldilocks_models/find_models/robot_1/ is a directory

Tasks settings:
duration = 0.4
N_sample_sl = 3
N_sample_gi = 3
delta_stride_length = 0.015
stride_length_0 = 0.2
delta_ground_incline = 0.05
ground_incline_0 = 0
stride length ranges from 0.1775 to 0.2225
ground incline ranges from -0.075 to 0.075

Optimization setting (outer loop):
Gradient descent method
Stochastic
Step size = 0.001
beta_momentum = 0.8
eps_regularization = 1e-08
is_add_tau_in_cost = 1
Non-zero touchdown impact
# of re-run in each iteration = 1
Failure rate threshold before seeing a all-success iteration = 0.2
method_to_solve_system_of_equations = 3
The maximum rate the cost can increase before shrinking step size = 0.15
The maximum rate the cost can increase before asking adjacent samples for help = 0.1
The maximum cost difference rate between two adjacent samples = 0.1

Optimization setting (inner loop):
max_inner_iter = 150
major_optimality_tolerance = 0.0001
major_feasibility_tolerance = 0.0001
n_node = 20

Reduced-order model setting:
Warning: Need to make sure that the implementation in DynamicsExpression agrees with n_s and n_tau.
n_s = 1, n_tau = 0
B_tau = 

rom_option = 2 (1D -- fix com vertical acceleration)
Make sure that n_s and B_tau are correct.
Proceed? (Y/N)
Y
Continue constructing the problem...
n_feature_s = 70
n_feature_sDDot = 6

Multithreading settings:
is multithread? 1
# of threads to be used 4

Removing old thread_finished.csv files... Done.

Other settings:
is_debug? 0
is_manual_initial_theta = 0
ave_min_cost_so_far = 2.57413
has_been_all_success? 1
iteration #3 is a rerun? 1
Reading previous step direction... (will get memory issue if the file doesn't exist)
Reading previous step size... (will get memory issue if the file doesn't exist)
adjacent_sample_indices = 
 1  0  1  0  1  2  3  4  5
 3  2  5  4  3  4  7  6  7
-1  4 -1  6  5  8 -1  8 -1
-1 -1 -1 -1  7 -1 -1 -1 -1

Start iterating...
Current time: Thu Apr  9 21:35:10 2020
************ Iteration 3 *************
theta_sDDot.head(6) = -1.10147e-05 -1.04239e-05  2.15549e-08  -9.8674e-06  2.09975e-08 -5.60026e-09
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  1 (0) | 0.205780 | -0.052145 | 3_1_w.csv | SolutionFound | 22.215086 | 2.497029 (0.000000)
  3 (0) | 0.188895 | 0.019434 | 3_3_w.csv | SolutionFound | 22.551378 | 2.429899 (0.000000)
  0 (0) | 0.191958 | -0.047255 | 3_0_w.csv | SolutionFound | 23.132206 | 2.466240 (0.000000)
  2 (0) | 0.220361 | -0.033626 | 3_2_w.csv | SolutionFound | 30.180954 | 2.480588 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.49373
cost_u = 0.39989
cost_lambda = 0.00016562
cost_lambda_diff = 0.0341908
cost_vel_diff = 0.0592309
cost_u_diff = 0.00774149
cost_q_hip_roll = 0.249348
cost_q_hip_yaw = 0.00191685
cost_q_quat_xyz = 0.01946
total_cost (only the nominal traj cost terms) = 2.26567
  5 (0) | 0.215423 | -0.021045 | 3_5_w.csv | SolutionFound | 24.732399 | 2.467791 (0.000000)
  4 (0) | 0.204805 | 0.014371 | 3_4_w.csv | SolutionFound | 24.845340 | 2.498395 (0.000000)
  6 (0) | 0.188790 | 0.062108 | 3_6_w.csv | SolutionFound | 25.486600 | 2.519889 (0.000000)
  7 (0) | 0.192870 | 0.033946 | 3_7_w.csv | SolutionFound | 25.667989 | 2.482883 (0.000000)
  8 (0) | 0.211400 | 0.034120 | 3_8_w.csv | SolutionFound | 25.295188 | 2.531364 (0.000000)
  1 (1) | 0.205780 | -0.052145 | 3_1_w.csv | SolutionFound | 24.508873 | 2.497029 (0.000000)
  3 (1) | 0.188895 | 0.019434 | 3_3_w.csv | SolutionFound | 24.884259 | 2.429899 (0.000000)
  0 (1) | 0.191958 | -0.047255 | 3_0_w.csv | SolutionFound | 26.159297 | 2.466240 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.49373
cost_u = 0.39989
cost_lambda = 0.00016562
cost_lambda_diff = 0.0341908
cost_vel_diff = 0.0592309
cost_u_diff = 0.00774149
cost_q_hip_roll = 0.249348
cost_q_hip_yaw = 0.00191685
cost_q_quat_xyz = 0.01946
total_cost (only the nominal traj cost terms) = 2.26567
  5 (1) | 0.215423 | -0.021045 | 3_5_w.csv | SolutionFound | 25.219740 | 2.467791 (0.000000)
  2 (1) | 0.220361 | -0.033626 | 3_2_w.csv | SolutionFound | 25.227226 | 2.480587 (0.000000)
  4 (1) | 0.204805 | 0.014371 | 3_4_w.csv | SolutionFound | 25.584479 | 2.498395 (0.000000)
  6 (1) | 0.188790 | 0.062108 | 3_6_w.csv | SolutionFound | 25.928923 | 2.519889 (0.000000)
  8 (1) | 0.211400 | 0.034120 | 3_8_w.csv | SolutionFound | 17.245007 | 2.531364 (0.000000)
  7 (1) | 0.192870 | 0.033946 | 3_7_w.csv | SolutionFound | 17.680386 | 2.482883 (0.000000)

Time spent on reading files of sample evaluation: 3 seconds

total_cost = 2.48601 (min so far: 2.48601)

Cost #6 went up by 0.196425%.

Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
1 | SolutionFound | -0.119471 | 850.204 | -0.223896
0 | SolutionFound | -0.122158 | 880.585 | -0.231207
3 | SolutionFound | -0.101861 | 626.806 | -0.190301
2 | SolutionFound | -0.10986 | 721.254 | -0.206753
4 | SolutionFound | -0.155877 | 1134.05 | -0.298163
6 | SolutionFound | -0.119356 | 792.095 | -0.21748
7 | SolutionFound | -0.121396 | 814.74 | -0.227722
5 | SolutionFound | -0.118616 | 843.187 | -0.225253
8 | SolutionFound | -0.148087 | 1051.92 | -0.279464
Time spent on extracting active (and independent rows) of A: 71 seconds

sample # | max element of abs-Pi | qi norm (this number should be close to 0)
0 | 129428926.939880 | 692.212796
3 | 121360227.316065 | 228.480263
1 | 139167919.707326 | 662.268098
2 | 142164979.110467 | 443.278649
4 | 69272449.292312 | 970.571081
6 | 127908361.861761 | 517.989049
7 | 121270432.198518 | 572.711734
5 | 145757085.029601 | 635.361197
8 | 74851714.842898 | 881.670045
Time spent on getting w in terms of theta: 263 seconds

Calculating gradient
gradient_cost norm: 135551

lambda_square = 0.175177
step_direction norm: 504431

step size = 1.98243e-09


Trail name: robot1_same_task_iter4
Make sure that you turned off snopt log and constraint jacobian writing.
Proceed? (Y/N)
Continue constructing the problem...
../dairlib_data/goldilocks_models/find_models/robot_1/ is a directory

Tasks settings:
duration = 0.4
N_sample_sl = 3
N_sample_gi = 3
delta_stride_length = 0.015
stride_length_0 = 0.2
delta_ground_incline = 0.05
ground_incline_0 = 0
stride length ranges from 0.1775 to 0.2225
ground incline ranges from -0.075 to 0.075

Optimization setting (outer loop):
Gradient descent method
Stochastic
Step size = 0.001
beta_momentum = 0.8
eps_regularization = 1e-08
is_add_tau_in_cost = 1
Non-zero touchdown impact
# of re-run in each iteration = 1
Failure rate threshold before seeing a all-success iteration = 0.2
method_to_solve_system_of_equations = 3
The maximum rate the cost can increase before shrinking step size = 0.15
The maximum rate the cost can increase before asking adjacent samples for help = 0.1
The maximum cost difference rate between two adjacent samples = 0.1

Optimization setting (inner loop):
max_inner_iter = 150
major_optimality_tolerance = 0.0001
major_feasibility_tolerance = 0.0001
n_node = 20

Reduced-order model setting:
Warning: Need to make sure that the implementation in DynamicsExpression agrees with n_s and n_tau.
n_s = 1, n_tau = 0
B_tau = 

rom_option = 2 (1D -- fix com vertical acceleration)
Make sure that n_s and B_tau are correct.
Proceed? (Y/N)
Continue constructing the problem...
n_feature_s = 70
n_feature_sDDot = 6

Multithreading settings:
is multithread? 1
# of threads to be used 4

Removing old thread_finished.csv files... Done.

Other settings:
is_debug? 0
is_manual_initial_theta = 0
ave_min_cost_so_far = 2.48611
has_been_all_success? 1
iteration #4 is a rerun? 1
Reading previous step direction... (will get memory issue if the file doesn't exist)
Reading previous step size... (will get memory issue if the file doesn't exist)
adjacent_sample_indices = 
 1  0  1  0  1  2  3  4  5
 3  2  5  4  3  4  7  6  7
-1  4 -1  6  5  8 -1  8 -1
-1 -1 -1 -1  7 -1 -1 -1 -1

Start iterating...
Current time: Thu Apr  9 21:46:31 2020
************ Iteration 4 *************
theta_sDDot.head(6) = -1.67014e-05 -1.58074e-05  2.83356e-08 -1.49647e-05  2.76114e-08 -8.13196e-09
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  0 (0) | 0.188352 | -0.051424 | 4_0_w.csv | SolutionFound | 22.099926 | 2.446540 (0.000000)
  2 (0) | 0.219766 | -0.046665 | 4_2_w.csv | SolutionFound | 22.305400 | 2.494922 (0.000000)
  3 (0) | 0.186263 | 0.012750 | 4_3_w.csv | SolutionFound | 22.596729 | 2.421444 (0.000000)
  1 (0) | 0.193026 | -0.040347 | 4_1_w.csv | SolutionFound | 23.070899 | 2.447589 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.4758
cost_u = 0.403497
cost_lambda = 0.000168571
cost_lambda_diff = 0.0333647
cost_vel_diff = 0.0564455
cost_u_diff = 0.00706005
cost_q_hip_roll = 0.2442
cost_q_hip_yaw = 0.00147993
cost_q_quat_xyz = 0.0200932
total_cost (only the nominal traj cost terms) = 2.24211
  4 (0) | 0.206177 | -0.011160 | 4_4_w.csv | SolutionFound | 24.501101 | 2.439107 (0.000000)
  5 (0) | 0.218564 | 0.019338 | 4_5_w.csv | SolutionFound | 24.598924 | 2.471255 (0.000000)
  7 (0) | 0.201805 | 0.034388 | 4_7_w.csv | SolutionFound | 24.440130 | 2.467337 (0.000000)
  6 (0) | 0.179196 | 0.057740 | 4_6_w.csv | SolutionFound | 24.925804 | 2.456949 (0.000000)
  0 (1) | 0.188352 | -0.051424 | 4_0_w.csv | SolutionFound | 24.326518 | 2.446540 (0.000000)
  8 (0) | 0.216763 | 0.055298 | 4_8_w.csv | SolutionFound | 24.829713 | 2.546206 (0.000000)
  2 (1) | 0.219766 | -0.046665 | 4_2_w.csv | SolutionFound | 24.404142 | 2.494922 (0.000000)
  1 (1) | 0.193026 | -0.040347 | 4_1_w.csv | SolutionFound | 24.390317 | 2.447589 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.4758
cost_u = 0.403497
cost_lambda = 0.000168571
cost_lambda_diff = 0.0333647
cost_vel_diff = 0.0564455
cost_u_diff = 0.00706005
cost_q_hip_roll = 0.2442
cost_q_hip_yaw = 0.00147993
cost_q_quat_xyz = 0.0200932
total_cost (only the nominal traj cost terms) = 2.24211
  3 (1) | 0.186263 | 0.012750 | 4_3_w.csv | SolutionFound | 23.770807 | 2.421444 (0.000000)
  4 (1) | 0.206177 | -0.011160 | 4_4_w.csv | SolutionFound | 24.186445 | 2.439107 (0.000000)
  5 (1) | 0.218564 | 0.019338 | 4_5_w.csv | SolutionFound | 24.653437 | 2.471255 (0.000000)
  7 (1) | 0.201805 | 0.034388 | 4_7_w.csv | SolutionFound | 24.758563 | 2.467337 (0.000000)
  6 (1) | 0.179196 | 0.057740 | 4_6_w.csv | SolutionFound | 14.387095 | 2.456949 (0.000000)
  8 (1) | 0.216763 | 0.055298 | 4_8_w.csv | SolutionFound | 14.710753 | 2.546206 (0.000000)

Time spent on reading files of sample evaluation: 3 seconds

total_cost = 2.46571 (min so far: 2.46571)

Cost #2 went up by 0.541612%.
Cost #5 went up by 0.140206%.
Cost #8 went up by 0.586641%.

Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
0 | SolutionFound | -0.124953 | 938.649 | -0.221756
2 | SolutionFound | -0.107708 | 979.774 | -0.201989
1 | SolutionFound | -0.119722 | 1024.33 | -0.225867
3 | SolutionFound | -0.114238 | 1044.7 | -0.216397
7 | SolutionFound | -0.106385 | 928.007 | -0.196528
6 | SolutionFound | -0.0905272 | 722.689 | -0.161641
5 | SolutionFound | -0.109972 | 1012.51 | -0.205511
4 | SolutionFound | -0.110404 | 993.411 | -0.208914
8 | SolutionFound | -0.110127 | 906.78 | -0.197163
Time spent on extracting active (and independent rows) of A: 67 seconds

sample # | max element of abs-Pi | qi norm (this number should be close to 0)
3 | 44750080.969614 | 853.472432
1 | 50884760.305675 | 966.229401
0 | 82021498.272251 | 801.290727
2 | 84318335.010906 | 850.904686
6 | 85044133.623442 | 530.596593
5 | 51108052.464188 | 846.536190
4 | 49937138.343087 | 933.636540
7 | 52778953.447993 | 745.304082
8 | 54628564.473125 | 730.459594
Time spent on getting w in terms of theta: 259 seconds

Calculating gradient
gradient_cost norm: 52831.8

lambda_square = 0.10927
step_direction norm: 454393

step size = 2.20074e-09

Trail name: robot1_same_task_iter5
Make sure that you turned off snopt log and constraint jacobian writing.
Proceed? (Y/N)
Continue constructing the problem...
../dairlib_data/goldilocks_models/find_models/robot_1/ is a directory

Tasks settings:
duration = 0.4
N_sample_sl = 3
N_sample_gi = 3
delta_stride_length = 0.015
stride_length_0 = 0.2
delta_ground_incline = 0.05
ground_incline_0 = 0
stride length ranges from 0.1775 to 0.2225
ground incline ranges from -0.075 to 0.075

Optimization setting (outer loop):
Gradient descent method
Stochastic
Step size = 0.001
beta_momentum = 0.8
eps_regularization = 1e-08
is_add_tau_in_cost = 1
Non-zero touchdown impact
# of re-run in each iteration = 1
Failure rate threshold before seeing a all-success iteration = 0.2
method_to_solve_system_of_equations = 3
The maximum rate the cost can increase before shrinking step size = 0.15
The maximum rate the cost can increase before asking adjacent samples for help = 0.1
The maximum cost difference rate between two adjacent samples = 0.1

Optimization setting (inner loop):
max_inner_iter = 150
major_optimality_tolerance = 0.0001
major_feasibility_tolerance = 0.0001
n_node = 20

Reduced-order model setting:
Warning: Need to make sure that the implementation in DynamicsExpression agrees with n_s and n_tau.
n_s = 1, n_tau = 0
B_tau = 

rom_option = 2 (1D -- fix com vertical acceleration)
Make sure that n_s and B_tau are correct.
Proceed? (Y/N)
Continue constructing the problem...
n_feature_s = 70
n_feature_sDDot = 6

Multithreading settings:
is multithread? 1
# of threads to be used 4

Removing old thread_finished.csv files... Done.

Other settings:
is_debug? 0
is_manual_initial_theta = 0
ave_min_cost_so_far = 2.46571
has_been_all_success? 1
iteration #5 is a rerun? 1
Reading previous step direction... (will get memory issue if the file doesn't exist)
Reading previous step size... (will get memory issue if the file doesn't exist)
adjacent_sample_indices = 
 1  0  1  0  1  2  3  4  5
 3  2  5  4  3  4  7  6  7
-1  4 -1  6  5  8 -1  8 -1
-1 -1 -1 -1  7 -1 -1 -1 -1

Start iterating...
Current time: Thu Apr  9 22:01:48 2020
************ Iteration 5 *************
theta_sDDot.head(6) = -2.23521e-05 -2.11533e-05  3.58158e-08 -2.00229e-05  3.48836e-08 -1.06056e-08
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  0 (0) | 0.183432 | -0.040497 | 5_0_w.csv | SolutionFound | 21.751205 | 2.397892 (0.000000)
  2 (0) | 0.220387 | -0.061423 | 5_2_w.csv | SolutionFound | 21.820977 | 2.550881 (0.000000)
  1 (0) | 0.193907 | -0.063968 | 5_1_w.csv | SolutionFound | 21.930884 | 2.489480 (0.000000)
  3 (0) | 0.191126 | -0.013964 | 5_3_w.csv | SolutionFound | 22.037212 | 2.424221 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.44775
cost_u = 0.391764
cost_lambda = 0.000164148
cost_lambda_diff = 0.0356249
cost_vel_diff = 0.0531086
cost_u_diff = 0.00713132
cost_q_hip_roll = 0.239917
cost_q_hip_yaw = 0.00279465
cost_q_quat_xyz = 0.0203862
total_cost (only the nominal traj cost terms) = 2.19864
  4 (0) | 0.195188 | -0.021121 | 5_4_w.csv | SolutionFound | 24.101462 | 2.425186 (0.000000)
  5 (0) | 0.210234 | 0.005588 | 5_5_w.csv | SolutionFound | 24.542809 | 2.440748 (0.000000)
  7 (0) | 0.198274 | 0.062899 | 5_7_w.csv | SolutionFound | 24.903889 | 2.507147 (0.000000)
  6 (0) | 0.180925 | 0.053998 | 5_6_w.csv | SolutionFound | 25.033637 | 2.442476 (0.000000)
  0 (1) | 0.183432 | -0.040497 | 5_0_w.csv | SolutionFound | 24.122422 | 2.397892 (0.000000)
  8 (0) | 0.221222 | 0.056911 | 5_8_w.csv | SolutionFound | 24.332528 | 2.550889 (0.000000)
  2 (1) | 0.220387 | -0.061423 | 5_2_w.csv | SolutionFound | 24.591642 | 2.550881 (0.000000)
  1 (1) | 0.193907 | -0.063968 | 5_1_w.csv | SolutionFound | 32.269278 | 2.488347 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.44775
cost_u = 0.391764
cost_lambda = 0.000164148
cost_lambda_diff = 0.0356249
cost_vel_diff = 0.0531086
cost_u_diff = 0.00713132
cost_q_hip_roll = 0.239917
cost_q_hip_yaw = 0.00279465
cost_q_quat_xyz = 0.0203862
total_cost (only the nominal traj cost terms) = 2.19864
  4 (1) | 0.195188 | -0.021121 | 5_4_w.csv | SolutionFound | 23.881516 | 2.425186 (0.000000)
  3 (1) | 0.191126 | -0.013964 | 5_3_w.csv | SolutionFound | 24.554959 | 2.424221 (0.000000)
  5 (1) | 0.210234 | 0.005588 | 5_5_w.csv | SolutionFound | 24.742478 | 2.440748 (0.000000)
  6 (1) | 0.180925 | 0.053998 | 5_6_w.csv | SolutionFound | 24.641898 | 2.442476 (0.000000)
  7 (1) | 0.198274 | 0.062899 | 5_7_w.csv | SolutionFound | 14.909316 | 2.507147 (0.000000)
  8 (1) | 0.221222 | 0.056911 | 5_8_w.csv | SolutionFound | 17.478322 | 2.550889 (0.000000)

Time spent on reading files of sample evaluation: 3 seconds

total_cost = 2.46976 (min so far: 2.46571)

Cost #1 went up by 1.66531%.
Cost #2 went up by 2.79672%.
Cost #3 went up by 0.114808%.
Cost #7 went up by 1.61348%.
Cost #8 went up by 0.771522%.

Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
2 | SolutionFound | -0.141585 | 1096.79 | -0.259658
3 | SolutionFound | -0.118357 | 1021.33 | -0.225236
1 | SolutionFound | -0.109793 | 886.101 | -0.203358
0 | SolutionFound | -0.0805115 | 748.821 | -0.150431
6 | SolutionFound | -0.0836016 | 704.395 | -0.145756
5 | SolutionFound | -0.103561 | 952.101 | -0.194402
7 | SolutionFound | -0.0916347 | 695.078 | -0.156249
4 | SolutionFound | -0.112747 | 998.224 | -0.213421
8 | SolutionFound | -0.107463 | 891.521 | -0.187829
Time spent on extracting active (and independent rows) of A: 68 seconds

sample # | max element of abs-Pi | qi norm (this number should be close to 0)
3 | 44005045.915388 | 968.857860
0 | 71007512.563689 | 598.140963
1 | 58860881.492879 | 746.173309
2 | 48553288.939751 | 1048.042419
5 | 42526781.124215 | 891.203715
7 | 71242233.814979 | 534.155124
4 | 42446324.531407 | 941.584391
6 | 78518357.661286 | 547.010576
8 | 44009248.506580 | 722.724407
Time spent on getting w in terms of theta: 261 seconds

Calculating gradient
gradient_cost norm: 19748.6

lambda_square = 0.0833554
step_direction norm: 354792

step size = 2.81855e-09

Trail name: robot1_same_task_iter6
Make sure that you turned off snopt log and constraint jacobian writing.
Proceed? (Y/N)
Continue constructing the problem...
../dairlib_data/goldilocks_models/find_models/robot_1/ is a directory

Tasks settings:
duration = 0.4
N_sample_sl = 3
N_sample_gi = 3
delta_stride_length = 0.015
stride_length_0 = 0.2
delta_ground_incline = 0.05
ground_incline_0 = 0
stride length ranges from 0.1775 to 0.2225
ground incline ranges from -0.075 to 0.075

Optimization setting (outer loop):
Gradient descent method
Stochastic
Step size = 0.001
beta_momentum = 0.8
eps_regularization = 1e-08
is_add_tau_in_cost = 1
Non-zero touchdown impact
# of re-run in each iteration = 1
Failure rate threshold before seeing a all-success iteration = 0.2
method_to_solve_system_of_equations = 3
The maximum rate the cost can increase before shrinking step size = 0.15
The maximum rate the cost can increase before asking adjacent samples for help = 0.1
The maximum cost difference rate between two adjacent samples = 0.1

Optimization setting (inner loop):
max_inner_iter = 150
major_optimality_tolerance = 0.0001
major_feasibility_tolerance = 0.0001
n_node = 20

Reduced-order model setting:
Warning: Need to make sure that the implementation in DynamicsExpression agrees with n_s and n_tau.
n_s = 1, n_tau = 0
B_tau = 

rom_option = 2 (1D -- fix com vertical acceleration)
Make sure that n_s and B_tau are correct.
Proceed? (Y/N)
Continue constructing the problem...
n_feature_s = 70
n_feature_sDDot = 6

Multithreading settings:
is multithread? 1
# of threads to be used 4

Removing old thread_finished.csv files... Done.

Other settings:
is_debug? 0
is_manual_initial_theta = 0
ave_min_cost_so_far = 2.46571
has_been_all_success? 1
iteration #6 is a rerun? 1
Reading previous step direction... (will get memory issue if the file doesn't exist)
Reading previous step size... (will get memory issue if the file doesn't exist)
adjacent_sample_indices = 
 1  0  1  0  1  2  3  4  5
 3  2  5  4  3  4  7  6  7
-1  4 -1  6  5  8 -1  8 -1
-1 -1 -1 -1  7 -1 -1 -1 -1

Start iterating...
Current time: Thu Apr  9 22:40:41 2020
************ Iteration 6 *************
theta_sDDot.head(6) = -2.75803e-05 -2.61047e-05  4.12496e-08 -2.47128e-05  4.02595e-08 -1.28331e-08
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  3 (0) | 0.189001 | 0.020953 | 6_3_w.csv | SolutionFound | 22.380025 | 2.425161 (0.000000)
  1 (0) | 0.198054 | -0.057162 | 6_1_w.csv | SolutionFound | 23.208044 | 2.489686 (0.000000)
  0 (0) | 0.184902 | -0.073457 | 6_0_w.csv | SolutionFound | 23.313969 | 2.491242 (0.000000)
  2 (0) | 0.215523 | -0.030682 | 6_2_w.csv | SolutionFound | 30.422136 | 2.445597 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.52403
cost_u = 0.407886
cost_lambda = 0.000171008
cost_lambda_diff = 0.0349604
cost_vel_diff = 0.0517679
cost_u_diff = 0.0068281
cost_q_hip_roll = 0.236882
cost_q_hip_yaw = 0.00194441
cost_q_quat_xyz = 0.0192853
total_cost (only the nominal traj cost terms) = 2.28376
  4 (0) | 0.206530 | -0.016416 | 6_4_w.csv | SolutionFound | 24.765076 | 2.444533 (0.000000)
  5 (0) | 0.221241 | 0.010008 | 6_5_w.csv | SolutionFound | 24.097634 | 2.468494 (0.000000)
  6 (0) | 0.182500 | 0.050853 | 6_6_w.csv | SolutionFound | 24.947605 | 2.460956 (0.000000)
  7 (0) | 0.203471 | 0.054900 | 6_7_w.csv | SolutionFound | 24.919952 | 2.503650 (0.000000)
  8 (0) | 0.207991 | 0.027312 | 6_8_w.csv | SolutionFound | 23.691802 | 2.464425 (0.000000)
  3 (1) | 0.189001 | 0.020953 | 6_3_w.csv | SolutionFound | 24.791316 | 2.425161 (0.000000)
  0 (1) | 0.184902 | -0.073457 | 6_0_w.csv | SolutionFound | 24.492925 | 2.491242 (0.000000)
  1 (1) | 0.198054 | -0.057162 | 6_1_w.csv | SolutionFound | 24.489103 | 2.489686 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.52403
cost_u = 0.407886
cost_lambda = 0.000171008
cost_lambda_diff = 0.0349604
cost_vel_diff = 0.0517679
cost_u_diff = 0.0068281
cost_q_hip_roll = 0.236882
cost_q_hip_yaw = 0.00194441
cost_q_quat_xyz = 0.0192853
total_cost (only the nominal traj cost terms) = 2.28376
  4 (1) | 0.206530 | -0.016416 | 6_4_w.csv | SolutionFound | 24.559223 | 2.444533 (0.000000)
  5 (1) | 0.221241 | 0.010008 | 6_5_w.csv | SolutionFound | 24.293353 | 2.468494 (0.000000)
  6 (1) | 0.182500 | 0.050853 | 6_6_w.csv | SolutionFound | 24.643634 | 2.460956 (0.000000)
  2 (1) | 0.215523 | -0.030682 | 6_2_w.csv | SolutionFound | 39.384102 | 2.445067 (0.000000)
  7 (1) | 0.203471 | 0.054900 | 6_7_w.csv | SolutionFound | 18.120202 | 2.503650 (0.000000)
  8 (1) | 0.207991 | 0.027312 | 6_8_w.csv | SolutionFound | 18.126744 | 2.464425 (0.000000)

Time spent on reading files of sample evaluation: 3 seconds

total_cost = 2.46591 (min so far: 2.46571)

Cost #0 went up by 3.89301%.
Cost #1 went up by 1.72006%.
Cost #3 went up by 0.153628%.
Cost #4 went up by 0.797463%.
Cost #5 went up by 1.13654%.
Cost #6 went up by 0.756608%.
Cost #7 went up by 1.47163%.

Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
0 | SolutionFound | -0.149209 | 993.871 | -0.261547
1 | SolutionFound | -0.135515 | 1012.45 | -0.251895
3 | SolutionFound | -0.107443 | 895.41 | -0.199801
2 | SolutionFound | -0.0921024 | 777.018 | -0.170647
7 | SolutionFound | -0.104837 | 758.573 | -0.183802
5 | SolutionFound | -0.114326 | 923.511 | -0.214197
6 | SolutionFound | -0.228333 | 725.061 | -0.434134
4 | SolutionFound | -0.113257 | 867.434 | -0.213548
8 | SolutionFound | -0.234186 | 745.081 | -0.44804
Time spent on extracting active (and independent rows) of A: 68 seconds

sample # | max element of abs-Pi | qi norm (this number should be close to 0)
0 | 48898989.990826 | 864.768497
1 | 40968095.614789 | 941.239062
3 | 43327772.407230 | 726.603593
2 | 60227519.027392 | 647.443686
7 | 45191954.728991 | 587.521206
6 | 33553322.613475 | 626.519097
4 | 55136688.810408 | 798.699333
5 | 40406894.032487 | 845.325155
8 | 33243058.597244 | 749.062826
Time spent on getting w in terms of theta: 260 seconds

Calculating gradient
gradient_cost norm: 74302.2

lambda_square = 0.137967
step_direction norm: 215994

step size = 4.62976e-09

Trail name: robot1_same_task_iter7
Make sure that you turned off snopt log and constraint jacobian writing.
Proceed? (Y/N)
Continue constructing the problem...
../dairlib_data/goldilocks_models/find_models/robot_1/ is a directory

Tasks settings:
duration = 0.4
N_sample_sl = 3
N_sample_gi = 3
delta_stride_length = 0.015
stride_length_0 = 0.2
delta_ground_incline = 0.05
ground_incline_0 = 0
stride length ranges from 0.1775 to 0.2225
ground incline ranges from -0.075 to 0.075

Optimization setting (outer loop):
Gradient descent method
Stochastic
Step size = 0.001
beta_momentum = 0.8
eps_regularization = 1e-08
is_add_tau_in_cost = 1
Non-zero touchdown impact
# of re-run in each iteration = 1
Failure rate threshold before seeing a all-success iteration = 0.2
method_to_solve_system_of_equations = 3
The maximum rate the cost can increase before shrinking step size = 0.15
The maximum rate the cost can increase before asking adjacent samples for help = 0.1
The maximum cost difference rate between two adjacent samples = 0.1

Optimization setting (inner loop):
max_inner_iter = 150
major_optimality_tolerance = 0.0001
major_feasibility_tolerance = 0.0001
n_node = 20

Reduced-order model setting:
Warning: Need to make sure that the implementation in DynamicsExpression agrees with n_s and n_tau.
n_s = 1, n_tau = 0
B_tau = 

rom_option = 2 (1D -- fix com vertical acceleration)
Make sure that n_s and B_tau are correct.
Proceed? (Y/N)
Continue constructing the problem...
n_feature_s = 70
n_feature_sDDot = 6

Multithreading settings:
is multithread? 1
# of threads to be used 4

Removing old thread_finished.csv files... Done.

Other settings:
is_debug? 0
is_manual_initial_theta = 0
ave_min_cost_so_far = 2.46571
has_been_all_success? 1
iteration #7 is a rerun? 1
Reading previous step direction... (will get memory issue if the file doesn't exist)
Reading previous step size... (will get memory issue if the file doesn't exist)
adjacent_sample_indices = 
 1  0  1  0  1  2  3  4  5
 3  2  5  4  3  4  7  6  7
-1  4 -1  6  5  8 -1  8 -1
-1 -1 -1 -1  7 -1 -1 -1 -1

Start iterating...
Current time: Thu Apr  9 23:05:30 2020
************ Iteration 7 *************
theta_sDDot.head(6) = -3.08279e-05 -2.92346e-05  2.51783e-08 -2.77282e-05  2.56544e-08 -1.42723e-08
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  3 (0) | 0.186593 | 0.004113 | 7_3_w.csv | SolutionFound | 22.212726 | 2.429706 (0.000000)
  1 (0) | 0.201237 | -0.074534 | 7_1_w.csv | SolutionFound | 22.427927 | 2.565433 (0.000000)
  2 (0) | 0.208652 | -0.074874 | 7_2_w.csv | SolutionFound | 22.822971 | 2.555522 (0.000000)
  0 (0) | 0.178812 | -0.066655 | 7_0_w.csv | SolutionFound | 23.348245 | 2.471809 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.51305
cost_u = 0.399519
cost_lambda = 0.000168685
cost_lambda_diff = 0.0397694
cost_vel_diff = 0.048267
cost_u_diff = 0.00695158
cost_q_hip_roll = 0.237789
cost_q_hip_yaw = 0.0019382
cost_q_quat_xyz = 0.019909
total_cost (only the nominal traj cost terms) = 2.26737
  4 (0) | 0.196064 | 0.002418 | 7_4_w.csv | SolutionFound | 24.417140 | 2.442710 (0.000000)
  5 (0) | 0.214816 | 0.011440 | 7_5_w.csv | SolutionFound | 23.857957 | 2.480109 (0.000000)
  6 (0) | 0.189618 | 0.058402 | 7_6_w.csv | SolutionFound | 24.934679 | 2.503068 (0.000000)
  7 (0) | 0.194383 | 0.025444 | 7_7_w.csv | SolutionFound | 25.198748 | 2.460553 (0.000000)
  3 (1) | 0.186593 | 0.004113 | 7_3_w.csv | SolutionFound | 24.485681 | 2.429706 (0.000000)
  8 (0) | 0.217091 | 0.036227 | 7_8_w.csv | SolutionFound | 24.861527 | 2.515064 (0.000000)
  1 (1) | 0.201237 | -0.074534 | 7_1_w.csv | SolutionFound | 24.071068 | 2.565433 (0.000000)
  2 (1) | 0.208652 | -0.074874 | 7_2_w.csv | SolutionFound | 24.157467 | 2.555522 (0.000000)
  0 (1) | 0.178812 | -0.066655 | 7_0_w.csv | SolutionFound | 23.678758 | 2.471809 (0.000000)
  4 (1) | 0.196064 | 0.002418 | 7_4_w.csv | SolutionFound | 24.071270 | 2.442710 (0.000000)
  5 (1) | 0.214816 | 0.011440 | 7_5_w.csv | SolutionFound | 24.382020 | 2.480109 (0.000000)
  6 (1) | 0.189618 | 0.058402 | 7_6_w.csv | SolutionFound | 24.658555 | 2.503068 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.51305
cost_u = 0.399519
cost_lambda = 0.000168685
cost_lambda_diff = 0.0397694
cost_vel_diff = 0.048267
cost_u_diff = 0.00695158
cost_q_hip_roll = 0.237789
cost_q_hip_yaw = 0.0019382
cost_q_quat_xyz = 0.019909
total_cost (only the nominal traj cost terms) = 2.26737
  7 (1) | 0.194383 | 0.025444 | 7_7_w.csv | SolutionFound | 14.252053 | 2.460553 (0.000000)
  8 (1) | 0.217091 | 0.036227 | 7_8_w.csv | SolutionFound | 14.272527 | 2.515064 (0.000000)

Time spent on reading files of sample evaluation: 3 seconds

total_cost = 2.49155 (min so far: 2.46571)

Cost #0 went up by 3.08271%.
Cost #1 went up by 4.81453%.
Cost #2 went up by 4.48862%.
Cost #3 went up by 0.341532%.
Cost #4 went up by 0.722418%.
Cost #5 went up by 1.61262%.
Cost #6 went up by 2.48068%.
Cost #8 went up by 2.05484%.

Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
2 | SolutionFound | -0.159679 | 805.745 | -0.276711
0 | SolutionFound | -0.14213 | 706.847 | -0.249852
3 | SolutionFound | -0.259448 | 776.263 | -0.498257
1 | SolutionFound | -0.173344 | 1012.82 | -0.319123
6 | SolutionFound | -0.127383 | 737.27 | -0.227278
5 | SolutionFound | -0.261406 | 753.094 | -0.499304
7 | SolutionFound | -0.251685 | 707.024 | -0.480236
4 | SolutionFound | -0.261211 | 760.316 | -0.500072
8 | SolutionFound | -0.249244 | 669.515 | -0.471827
Time spent on extracting active (and independent rows) of A: 68 seconds

sample # | max element of abs-Pi | qi norm (this number should be close to 0)
3 | 32018977.611578 | 695.319092
1 | 39950128.289530 | 918.306907
0 | 46018831.441116 | 523.503719
2 | 52062642.994144 | 653.634484
4 | 31793105.817057 | 752.193692
6 | 39101855.260700 | 567.769838
7 | 31224615.390941 | 730.050210
5 | 32853750.935213 | 753.787342
8 | 34017318.985217 | 600.051629
Time spent on getting w in terms of theta: 260 seconds

Calculating gradient
gradient_cost norm: 114703

lambda_square = 0.282147
step_direction norm: 83343.3

step size = 1.19986e-08

Trail name: robot1_same_task_iter8
Make sure that you turned off snopt log and constraint jacobian writing.
Proceed? (Y/N)
Continue constructing the problem...
../dairlib_data/goldilocks_models/find_models/robot_1/ is a directory

Tasks settings:
duration = 0.4
N_sample_sl = 3
N_sample_gi = 3
delta_stride_length = 0.015
stride_length_0 = 0.2
delta_ground_incline = 0.05
ground_incline_0 = 0
stride length ranges from 0.1775 to 0.2225
ground incline ranges from -0.075 to 0.075

Optimization setting (outer loop):
Gradient descent method
Stochastic
Step size = 0.001
beta_momentum = 0.8
eps_regularization = 1e-08
is_add_tau_in_cost = 1
Non-zero touchdown impact
# of re-run in each iteration = 1
Failure rate threshold before seeing a all-success iteration = 0.2
method_to_solve_system_of_equations = 3
The maximum rate the cost can increase before shrinking step size = 0.15
The maximum rate the cost can increase before asking adjacent samples for help = 0.1
The maximum cost difference rate between two adjacent samples = 0.1

Optimization setting (inner loop):
max_inner_iter = 150
major_optimality_tolerance = 0.0001
major_feasibility_tolerance = 0.0001
n_node = 20

Reduced-order model setting:
Warning: Need to make sure that the implementation in DynamicsExpression agrees with n_s and n_tau.
n_s = 1, n_tau = 0
B_tau = 

rom_option = 2 (1D -- fix com vertical acceleration)
Make sure that n_s and B_tau are correct.
Proceed? (Y/N)
Continue constructing the problem...
n_feature_s = 70
n_feature_sDDot = 6

Multithreading settings:
is multithread? 1
# of threads to be used 4

Removing old thread_finished.csv files... Done.

Other settings:
is_debug? 0
is_manual_initial_theta = 0
ave_min_cost_so_far = 2.46571
has_been_all_success? 1
iteration #8 is a rerun? 1
Reading previous step direction... (will get memory issue if the file doesn't exist)
Reading previous step size... (will get memory issue if the file doesn't exist)
adjacent_sample_indices = 
 1  0  1  0  1  2  3  4  5
 3  2  5  4  3  4  7  6  7
-1  4 -1  6  5  8 -1  8 -1
-1 -1 -1 -1  7 -1 -1 -1 -1

Start iterating...
Current time: Thu Apr  9 23:20:32 2020
************ Iteration 8 *************
theta_sDDot.head(6) = -2.33056e-05 -2.25008e-05 -4.67845e-08 -2.17153e-05 -4.04645e-08 -1.10704e-08
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  3 (0) | 0.189910 | -0.024460 | 8_3_w.csv | SolutionFound | 22.442835 | 2.461184 (0.000000)
  0 (0) | 0.181105 | -0.044442 | 8_0_w.csv | SolutionFound | 22.720074 | 2.465592 (0.000000)
  1 (0) | 0.206528 | -0.061183 | 8_1_w.csv | SolutionFound | 23.031131 | 2.532899 (0.000000)
  2 (0) | 0.221602 | -0.066305 | 8_2_w.csv | SolutionFound | 23.562207 | 2.573025 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.48451
cost_u = 0.409691
cost_lambda = 0.000174754
cost_lambda_diff = 0.0363966
cost_vel_diff = 0.0490962
cost_u_diff = 0.00702427
cost_q_hip_roll = 0.244099
cost_q_hip_yaw = 0.0041732
cost_q_quat_xyz = 0.0189288
total_cost (only the nominal traj cost terms) = 2.25409
  5 (0) | 0.210143 | -0.008214 | 8_5_w.csv | SolutionFound | 24.329839 | 2.482305 (0.000000)
  4 (0) | 0.199104 | -0.008315 | 8_4_w.csv | SolutionFound | 24.431867 | 2.466015 (0.000000)
  6 (0) | 0.182712 | 0.052517 | 8_6_w.csv | SolutionFound | 24.473459 | 2.501946 (0.000000)
  7 (0) | 0.200506 | 0.047597 | 8_7_w.csv | SolutionFound | 25.001982 | 2.526275 (0.000000)
  1 (1) | 0.206528 | -0.061183 | 8_1_w.csv | SolutionFound | 24.031127 | 2.532899 (0.000000)
  0 (1) | 0.181105 | -0.044442 | 8_0_w.csv | SolutionFound | 24.364108 | 2.465592 (0.000000)
  8 (0) | 0.217810 | 0.044626 | 8_8_w.csv | SolutionFound | 24.895506 | 2.557961 (0.000000)
  3 (1) | 0.189910 | -0.024460 | 8_3_w.csv | SolutionFound | 24.288352 | 2.461184 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.48451
cost_u = 0.409691
cost_lambda = 0.000174754
cost_lambda_diff = 0.0363966
cost_vel_diff = 0.0490962
cost_u_diff = 0.00702427
cost_q_hip_roll = 0.244099
cost_q_hip_yaw = 0.0041732
cost_q_quat_xyz = 0.0189288
total_cost (only the nominal traj cost terms) = 2.25409
  5 (1) | 0.210143 | -0.008214 | 8_5_w.csv | SolutionFound | 23.818936 | 2.482305 (0.000000)
  2 (1) | 0.221602 | -0.066305 | 8_2_w.csv | SolutionFound | 24.622121 | 2.573025 (0.000000)
  4 (1) | 0.199104 | -0.008315 | 8_4_w.csv | SolutionFound | 24.676318 | 2.466015 (0.000000)
  6 (1) | 0.182712 | 0.052517 | 8_6_w.csv | SolutionFound | 24.498288 | 2.501946 (0.000000)
  8 (1) | 0.217810 | 0.044626 | 8_8_w.csv | SolutionFound | 14.207083 | 2.557961 (0.000000)
  7 (1) | 0.200506 | 0.047597 | 8_7_w.csv | SolutionFound | 14.316528 | 2.526275 (0.000000)

Time spent on reading files of sample evaluation: 3 seconds

total_cost = 2.50747 (min so far: 2.46571)

Cost #0 went up by 2.82332%.
Cost #1 went up by 3.48547%.
Cost #2 went up by 5.20415%.
Cost #3 went up by 1.64117%.
Cost #4 went up by 1.68317%.
Cost #5 went up by 1.70276%.
Cost #6 went up by 2.43482%.
Cost #7 went up by 2.67095%.
Cost #8 went up by 3.79562%.

Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
0 | SolutionFound | -0.156145 | 855.625 | -0.295595
1 | SolutionFound | -0.157166 | 918.053 | -0.29382
3 | SolutionFound | -0.298837 | 802.469 | -0.5703
2 | SolutionFound | -0.147254 | 742.697 | -0.270953
6 | SolutionFound | -0.260415 | 694.546 | -0.490049
5 | SolutionFound | -0.287198 | 785.806 | -0.54671
4 | SolutionFound | -0.284604 | 778.866 | -0.5421
7 | SolutionFound | -0.259124 | 679.66 | -0.486496
8 | SolutionFound | -0.261107 | 677.742 | -0.492018
Time spent on extracting active (and independent rows) of A: 68 seconds

sample # | max element of abs-Pi | qi norm (this number should be close to 0)
3 | 29745540.033042 | 815.404326
0 | 47728531.343132 | 747.374712
1 | 44586108.522918 | 722.220305
2 | 51452869.884803 | 572.934402
7 | 28700009.940238 | 626.792411
4 | 30317653.934806 | 797.049922
6 | 26047216.788393 | 636.983802
5 | 31731018.930899 | 817.797028
8 | 28285979.186737 | 681.150257
Time spent on getting w in terms of theta: 259 seconds

Calculating gradient
gradient_cost norm: 120928

lambda_square = 0.350269
step_direction norm: 103320

step size = 9.67864e-09

Trail name: robot1_same_task_iter9
Make sure that you turned off snopt log and constraint jacobian writing.
Proceed? (Y/N)
Continue constructing the problem...
../dairlib_data/goldilocks_models/find_models/robot_1/ is a directory

Tasks settings:
duration = 0.4
N_sample_sl = 3
N_sample_gi = 3
delta_stride_length = 0.015
stride_length_0 = 0.2
delta_ground_incline = 0.05
ground_incline_0 = 0
stride length ranges from 0.1775 to 0.2225
ground incline ranges from -0.075 to 0.075

Optimization setting (outer loop):
Gradient descent method
Stochastic
Step size = 0.001
beta_momentum = 0.8
eps_regularization = 1e-08
is_add_tau_in_cost = 1
Non-zero touchdown impact
# of re-run in each iteration = 1
Failure rate threshold before seeing a all-success iteration = 0.2
method_to_solve_system_of_equations = 3
The maximum rate the cost can increase before shrinking step size = 0.15
The maximum rate the cost can increase before asking adjacent samples for help = 0.1
The maximum cost difference rate between two adjacent samples = 0.1

Optimization setting (inner loop):
max_inner_iter = 150
major_optimality_tolerance = 0.0001
major_feasibility_tolerance = 0.0001
n_node = 20

Reduced-order model setting:
Warning: Need to make sure that the implementation in DynamicsExpression agrees with n_s and n_tau.
n_s = 1, n_tau = 0
B_tau = 

rom_option = 2 (1D -- fix com vertical acceleration)
Make sure that n_s and B_tau are correct.
Proceed? (Y/N)
Continue constructing the problem...
n_feature_s = 70
n_feature_sDDot = 6

Multithreading settings:
is multithread? 1
# of threads to be used 4

Removing old thread_finished.csv files... Done.

Other settings:
is_debug? 0
is_manual_initial_theta = 0
ave_min_cost_so_far = 2.46571
has_been_all_success? 1
iteration #9 is a rerun? 1
Reading previous step direction... (will get memory issue if the file doesn't exist)
Reading previous step size... (will get memory issue if the file doesn't exist)
adjacent_sample_indices = 
 1  0  1  0  1  2  3  4  5
 3  2  5  4  3  4  7  6  7
-1  4 -1  6  5  8 -1  8 -1
-1 -1 -1 -1  7 -1 -1 -1 -1

Start iterating...
Current time: Thu Apr  9 23:34:43 2020
************ Iteration 9 *************
theta_sDDot.head(6) = -6.94375e-06 -7.53155e-06  -1.1644e-07 -8.02681e-06 -1.04538e-07 -4.04244e-09
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  3 (0) | 0.186437 | 0.009022 | 9_3_w.csv | SolutionFound | 22.418536 | 2.422051 (0.000000)
  0 (0) | 0.177990 | -0.031339 | 9_0_w.csv | SolutionFound | 22.551713 | 2.419187 (0.000000)
  1 (0) | 0.199003 | -0.064607 | 9_1_w.csv | SolutionFound | 22.613404 | 2.504421 (0.000000)
  2 (0) | 0.213664 | -0.053009 | 9_2_w.csv | SolutionFound | 23.817267 | 2.497037 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.45615
cost_u = 0.407054
cost_lambda = 0.000173901
cost_lambda_diff = 0.0349787
cost_vel_diff = 0.0474472
cost_u_diff = 0.0068586
cost_q_hip_roll = 0.233526
cost_q_hip_yaw = 0.00379806
cost_q_quat_xyz = 0.0185358
total_cost (only the nominal traj cost terms) = 2.20852
  6 (0) | 0.188028 | 0.046179 | 9_6_w.csv | SolutionFound | 24.308141 | 2.458171 (0.000000)
  5 (0) | 0.207595 | 0.018194 | 9_5_w.csv | SolutionFound | 24.341728 | 2.459959 (0.000000)
  4 (0) | 0.205663 | -0.016312 | 9_4_w.csv | SolutionFound | 24.568755 | 2.448955 (0.000000)
  7 (0) | 0.196434 | 0.039954 | 9_7_w.csv | SolutionFound | 24.987541 | 2.458215 (0.000000)
  8 (0) | 0.219146 | 0.058915 | 9_8_w.csv | SolutionFound | 24.144824 | 2.574207 (0.000000)
  1 (1) | 0.199003 | -0.064607 | 9_1_w.csv | SolutionFound | 24.191296 | 2.504421 (0.000000)
  0 (1) | 0.177990 | -0.031339 | 9_0_w.csv | SolutionFound | 24.282482 | 2.419187 (0.000000)
  3 (1) | 0.186437 | 0.009022 | 9_3_w.csv | SolutionFound | 24.386620 | 2.422051 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.45615
cost_u = 0.407054
cost_lambda = 0.000173901
cost_lambda_diff = 0.0349787
cost_vel_diff = 0.0474472
cost_u_diff = 0.0068586
cost_q_hip_roll = 0.233526
cost_q_hip_yaw = 0.00379806
cost_q_quat_xyz = 0.0185358
total_cost (only the nominal traj cost terms) = 2.20852
  2 (1) | 0.213664 | -0.053009 | 9_2_w.csv | SolutionFound | 24.325460 | 2.497037 (0.000000)
  6 (1) | 0.188028 | 0.046179 | 9_6_w.csv | SolutionFound | 24.154541 | 2.458171 (0.000000)
  4 (1) | 0.205663 | -0.016312 | 9_4_w.csv | SolutionFound | 24.275838 | 2.448955 (0.000000)
  5 (1) | 0.207595 | 0.018194 | 9_5_w.csv | SolutionFound | 24.447458 | 2.459959 (0.000000)
  7 (1) | 0.196434 | 0.039954 | 9_7_w.csv | SolutionFound | 14.175886 | 2.458215 (0.000000)
  8 (1) | 0.219146 | 0.058915 | 9_8_w.csv | SolutionFound | 14.082148 | 2.574207 (0.000000)

Time spent on reading files of sample evaluation: 3 seconds

total_cost = 2.47136 (min so far: 2.46571)

Cost #0 went up by 0.888281%.
Cost #1 went up by 2.32188%.
Cost #2 went up by 2.09752%.
Cost #3 went up by 0.0251916%.
Cost #4 went up by 0.979717%.
Cost #5 went up by 0.787053%.
Cost #6 went up by 0.64238%.
Cost #8 went up by 4.455%.

Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
1 | SolutionFound | -0.156374 | 930.307 | -0.27633
0 | SolutionFound | -0.128751 | 937.582 | -0.243985
3 | SolutionFound | -0.244529 | 761.353 | -0.466182
2 | SolutionFound | -0.118583 | 859.512 | -0.220154
4 | SolutionFound | -0.128035 | 923.989 | -0.242173
6 | SolutionFound | -0.106012 | 659.293 | -0.189628
7 | SolutionFound | -0.107102 | 728.164 | -0.193241
5 | SolutionFound | -0.245018 | 731.119 | -0.464376
8 | SolutionFound | -0.235883 | 642.602 | -0.438031
Time spent on extracting active (and independent rows) of A: 68 seconds

sample # | max element of abs-Pi | qi norm (this number should be close to 0)
3 | 31041233.855249 | 707.291189
2 | 48295169.696548 | 705.795283
0 | 45032325.624542 | 847.319422
1 | 42727898.816259 | 772.288399
5 | 30590920.018249 | 764.859166
7 | 41199747.854676 | 591.071501
6 | 44086182.905645 | 529.331526
4 | 39534299.813105 | 829.112091
8 | 28952342.539566 | 613.368158
Time spent on getting w in terms of theta: 262 seconds

Calculating gradient
gradient_cost norm: 98516.3

lambda_square = 0.200638
step_direction norm: 173701

step size = 5.757e-09

Trail name: robot1_same_task_iter10
Make sure that you turned off snopt log and constraint jacobian writing.
Proceed? (Y/N)
Continue constructing the problem...
../dairlib_data/goldilocks_models/find_models/robot_1/ is a directory

Tasks settings:
duration = 0.4
N_sample_sl = 3
N_sample_gi = 3
delta_stride_length = 0.015
stride_length_0 = 0.2
delta_ground_incline = 0.05
ground_incline_0 = 0
stride length ranges from 0.1775 to 0.2225
ground incline ranges from -0.075 to 0.075

Optimization setting (outer loop):
Gradient descent method
Stochastic
Step size = 0.001
beta_momentum = 0.8
eps_regularization = 1e-08
is_add_tau_in_cost = 1
Non-zero touchdown impact
# of re-run in each iteration = 1
Failure rate threshold before seeing a all-success iteration = 0.2
method_to_solve_system_of_equations = 3
The maximum rate the cost can increase before shrinking step size = 0.15
The maximum rate the cost can increase before asking adjacent samples for help = 0.1
The maximum cost difference rate between two adjacent samples = 0.1

Optimization setting (inner loop):
max_inner_iter = 150
major_optimality_tolerance = 0.0001
major_feasibility_tolerance = 0.0001
n_node = 20

Reduced-order model setting:
Warning: Need to make sure that the implementation in DynamicsExpression agrees with n_s and n_tau.
n_s = 1, n_tau = 0
B_tau = 

rom_option = 2 (1D -- fix com vertical acceleration)
Make sure that n_s and B_tau are correct.
Proceed? (Y/N)
Continue constructing the problem...
n_feature_s = 70
n_feature_sDDot = 6

Multithreading settings:
is multithread? 1
# of threads to be used 4

Removing old thread_finished.csv files... Done.

Other settings:
is_debug? 0
is_manual_initial_theta = 0
ave_min_cost_so_far = 2.46571
has_been_all_success? 1
iteration #10 is a rerun? 1
Reading previous step direction... (will get memory issue if the file doesn't exist)
Reading previous step size... (will get memory issue if the file doesn't exist)
adjacent_sample_indices = 
 1  0  1  0  1  2  3  4  5
 3  2  5  4  3  4  7  6  7
-1  4 -1  6  5  8 -1  8 -1
-1 -1 -1 -1  7 -1 -1 -1 -1

Start iterating...
Current time: Thu Apr  9 23:53:52 2020
************ Iteration 10 *************
theta_sDDot.head(6) =  6.32843e-06  4.66743e-06 -1.87952e-07  3.18284e-06  -1.7054e-07   1.7319e-09
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  3 (0) | 0.191226 | -0.023157 | 10_3_w.csv | SolutionFound | 22.589031 | 2.408491 (0.000000)
  2 (0) | 0.209390 | -0.066457 | 10_2_w.csv | SolutionFound | 22.693047 | 2.516161 (0.000000)
  1 (0) | 0.199600 | -0.053381 | 10_1_w.csv | SolutionFound | 23.732592 | 2.465562 (0.000000)
  0 (0) | 0.186329 | -0.025458 | 10_0_w.csv | SolutionFound | 23.799190 | 2.405097 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.4292
cost_u = 0.405916
cost_lambda = 0.000173157
cost_lambda_diff = 0.0338205
cost_vel_diff = 0.0475146
cost_u_diff = 0.00670941
cost_q_hip_roll = 0.249269
cost_q_hip_yaw = 0.00343146
cost_q_quat_xyz = 0.0191088
total_cost (only the nominal traj cost terms) = 2.19515
  4 (0) | 0.201474 | -0.023464 | 10_4_w.csv | SolutionFound | 24.805197 | 2.426377 (0.000000)
  5 (0) | 0.213143 | -0.010935 | 10_5_w.csv | SolutionFound | 24.688297 | 2.435704 (0.000000)
  7 (0) | 0.202937 | 0.061586 | 10_7_w.csv | SolutionFound | 25.128796 | 2.518475 (0.000000)
  6 (0) | 0.184742 | 0.067309 | 10_6_w.csv | SolutionFound | 25.465741 | 2.482860 (0.000000)
  8 (0) | 0.222431 | 0.064949 | 10_8_w.csv | SolutionFound | 23.870287 | 2.581764 (0.000000)
  2 (1) | 0.209390 | -0.066457 | 10_2_w.csv | SolutionFound | 24.432308 | 2.516161 (0.000000)
  0 (1) | 0.186329 | -0.025458 | 10_0_w.csv | SolutionFound | 24.454830 | 2.405097 (0.000000)
  1 (1) | 0.199600 | -0.053381 | 10_1_w.csv | SolutionFound | 24.749473 | 2.465562 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.4292
cost_u = 0.405916
cost_lambda = 0.000173157
cost_lambda_diff = 0.0338205
cost_vel_diff = 0.0475146
cost_u_diff = 0.00670941
cost_q_hip_roll = 0.249269
cost_q_hip_yaw = 0.00343146
cost_q_quat_xyz = 0.0191088
total_cost (only the nominal traj cost terms) = 2.19515
  6 (1) | 0.184742 | 0.067309 | 10_6_w.csv | SolutionFound | 24.361566 | 2.482860 (0.000000)
  5 (1) | 0.213143 | -0.010935 | 10_5_w.csv | SolutionFound | 24.440630 | 2.435704 (0.000000)
  4 (1) | 0.201474 | -0.023464 | 10_4_w.csv | SolutionFound | 24.457059 | 2.426377 (0.000000)
  3 (1) | 0.191226 | -0.023157 | 10_3_w.csv | SolutionFound | 31.394926 | 2.407214 (0.000000)
  7 (1) | 0.202937 | 0.061586 | 10_7_w.csv | SolutionFound | 14.559100 | 2.518475 (0.000000)
  8 (1) | 0.222431 | 0.064949 | 10_8_w.csv | SolutionFound | 14.734370 | 2.581764 (0.000000)

Time spent on reading files of sample evaluation: 3 seconds

total_cost = 2.47102 (min so far: 2.46571)

Cost #0 went up by 0.300681%.
Cost #1 went up by 0.734192%.
Cost #2 went up by 2.87929%.
Cost #4 went up by 0.0490683%.
Cost #6 went up by 1.65324%.
Cost #7 went up by 2.45096%.
Cost #8 went up by 4.76136%.

Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
0 | SolutionFound | -0.104894 | 929.762 | -0.197217
1 | SolutionFound | -0.114731 | 948.311 | -0.211155
2 | SolutionFound | -0.119783 | 944.23 | -0.216081
3 | SolutionFound | -0.0988205 | 908.716 | -0.186675
5 | SolutionFound | -0.102612 | 908.088 | -0.19215
4 | SolutionFound | -0.106019 | 931.877 | -0.199046
6 | SolutionFound | -0.0948969 | 776.081 | -0.162624
7 | SolutionFound | -0.211647 | 673.948 | -0.393955
8 | SolutionFound | -0.214184 | 667.825 | -0.396276
Time spent on extracting active (and independent rows) of A: 67 seconds

sample # | max element of abs-Pi | qi norm (this number should be close to 0)
2 | 45035357.681502 | 890.438407
3 | 44453983.382091 | 768.046849
0 | 40883857.703270 | 860.283225
1 | 43331513.153562 | 879.405188
7 | 29731385.337860 | 649.461426
6 | 39177921.626151 | 655.659922
5 | 40567494.839534 | 843.439761
4 | 41500799.446745 | 868.901906
8 | 29045960.116128 | 647.317431
Time spent on getting w in terms of theta: 261 seconds

Calculating gradient
gradient_cost norm: 67304.4

lambda_square = 0.127903
step_direction norm: 204809

step size = 4.8826e-09

Trail name: robot1_same_task_iter11
Make sure that you turned off snopt log and constraint jacobian writing.
Proceed? (Y/N)
Continue constructing the problem...
../dairlib_data/goldilocks_models/find_models/robot_1/ is a directory

Tasks settings:
duration = 0.4
N_sample_sl = 3
N_sample_gi = 3
delta_stride_length = 0.015
stride_length_0 = 0.2
delta_ground_incline = 0.05
ground_incline_0 = 0
stride length ranges from 0.1775 to 0.2225
ground incline ranges from -0.075 to 0.075

Optimization setting (outer loop):
Gradient descent method
Stochastic
Step size = 0.001
beta_momentum = 0.8
eps_regularization = 1e-08
is_add_tau_in_cost = 1
Non-zero touchdown impact
# of re-run in each iteration = 1
Failure rate threshold before seeing a all-success iteration = 0.2
method_to_solve_system_of_equations = 3
The maximum rate the cost can increase before shrinking step size = 0.15
The maximum rate the cost can increase before asking adjacent samples for help = 0.1
The maximum cost difference rate between two adjacent samples = 0.1

Optimization setting (inner loop):
max_inner_iter = 150
major_optimality_tolerance = 0.0001
major_feasibility_tolerance = 0.0001
n_node = 20

Reduced-order model setting:
Warning: Need to make sure that the implementation in DynamicsExpression agrees with n_s and n_tau.
n_s = 1, n_tau = 0
B_tau = 

rom_option = 2 (1D -- fix com vertical acceleration)
Make sure that n_s and B_tau are correct.
Proceed? (Y/N)
Continue constructing the problem...
n_feature_s = 70
n_feature_sDDot = 6

Multithreading settings:
is multithread? 1
# of threads to be used 4

Removing old thread_finished.csv files... Done.

Other settings:
is_debug? 0
is_manual_initial_theta = 0
ave_min_cost_so_far = 2.46571
has_been_all_success? 1
iteration #11 is a rerun? 1
Reading previous step direction... (will get memory issue if the file doesn't exist)
Reading previous step size... (will get memory issue if the file doesn't exist)
adjacent_sample_indices = 
 1  0  1  0  1  2  3  4  5
 3  2  5  4  3  4  7  6  7
-1  4 -1  6  5  8 -1  8 -1
-1 -1 -1 -1  7 -1 -1 -1 -1

Start iterating...
Current time: Fri Apr 10 00:03:50 2020
************ Iteration 11 *************
theta_sDDot.head(6) =  1.81791e-05  1.55848e-05 -2.72124e-07  1.32387e-05 -2.48419e-07  7.83322e-09
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  0 (0) | 0.185810 | -0.067280 | 11_0_w.csv | SolutionFound | 22.984905 | 2.433808 (0.000000)
  3 (0) | 0.186262 | -0.003749 | 11_3_w.csv | SolutionFound | 23.589752 | 2.388430 (0.000000)
  1 (0) | 0.194207 | -0.050868 | 11_1_w.csv | SolutionFound | 23.744790 | 2.412187 (0.000000)
  2 (0) | 0.208512 | -0.040580 | 11_2_w.csv | SolutionFound | 37.646951 | 2.417512 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.48767
cost_u = 0.389233
cost_lambda = 0.000162241
cost_lambda_diff = 0.0343987
cost_vel_diff = 0.0485816
cost_u_diff = 0.00623902
cost_q_hip_roll = 0.24728
cost_q_hip_yaw = 0.0036942
cost_q_quat_xyz = 0.0190078
total_cost (only the nominal traj cost terms) = 2.23626
  5 (0) | 0.210672 | 0.012430 | 11_5_w.csv | SolutionFound | 23.762164 | 2.425390 (0.000000)
  4 (0) | 0.207230 | 0.017437 | 11_4_w.csv | SolutionFound | 24.740106 | 2.425164 (0.000000)
  6 (0) | 0.183989 | 0.049191 | 11_6_w.csv | SolutionFound | 24.705000 | 2.431686 (0.000000)
  7 (0) | 0.199445 | 0.030150 | 11_7_w.csv | SolutionFound | 24.028995 | 2.429197 (0.000000)
  8 (0) | 0.211149 | 0.058111 | 11_8_w.csv | SolutionFound | 24.498512 | 2.511620 (0.000000)
  3 (1) | 0.186262 | -0.003749 | 11_3_w.csv | SolutionFound | 23.959462 | 2.388430 (0.000000)
  0 (1) | 0.185810 | -0.067280 | 11_0_w.csv | SolutionFound | 25.403589 | 2.433808 (0.000000)
  1 (1) | 0.194207 | -0.050868 | 11_1_w.csv | SolutionFound | 24.312701 | 2.412187 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.48767
cost_u = 0.389233
cost_lambda = 0.000162241
cost_lambda_diff = 0.0343987
cost_vel_diff = 0.0485816
cost_u_diff = 0.00623902
cost_q_hip_roll = 0.24728
cost_q_hip_yaw = 0.0036942
cost_q_quat_xyz = 0.0190078
total_cost (only the nominal traj cost terms) = 2.23626
  4 (1) | 0.207230 | 0.017437 | 11_4_w.csv | SolutionFound | 24.206455 | 2.425164 (0.000000)
  5 (1) | 0.210672 | 0.012430 | 11_5_w.csv | SolutionFound | 24.443459 | 2.425390 (0.000000)
  2 (1) | 0.208512 | -0.040580 | 11_2_w.csv | SolutionFound | 24.949456 | 2.417510 (0.000000)
  6 (1) | 0.183989 | 0.049191 | 11_6_w.csv | SolutionFound | 24.631174 | 2.431686 (0.000000)
  7 (1) | 0.199445 | 0.030150 | 11_7_w.csv | SolutionFound | 14.233061 | 2.429197 (0.000000)
  8 (1) | 0.211149 | 0.058111 | 11_8_w.csv | SolutionFound | 18.640923 | 2.511620 (0.000000)

Time spent on reading files of sample evaluation: 3 seconds

total_cost = 2.43056 (min so far: 2.43056)

Cost #0 went up by 1.49798%.
Cost #8 went up by 1.91526%.

Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
3 | SolutionFound | -0.0877407 | 929.317 | -0.164853
1 | SolutionFound | -0.0610428 | 596.361 | -0.108781
2 | SolutionFound | -0.0584989 | 570.04 | -0.104072
0 | SolutionFound | -0.0701539 | 683.13 | -0.12424
6 | SolutionFound | -0.0810001 | 825.174 | -0.142825
7 | SolutionFound | -0.0830278 | 863.182 | -0.150301
4 | SolutionFound | -0.0859368 | 902.723 | -0.157814
5 | SolutionFound | -0.085787 | 903.466 | -0.158122
8 | SolutionFound | -0.0891382 | 833.442 | -0.152546
Time spent on extracting active (and independent rows) of A: 67 seconds

sample # | max element of abs-Pi | qi norm (this number should be close to 0)
3 | 44716464.732302 | 824.117376
2 | 67651911.010449 | 504.438740
0 | 54406227.131368 | 604.750903
1 | 67282306.243149 | 529.766469
4 | 41738288.542845 | 789.256850
7 | 44512006.308714 | 756.972583
6 | 42095726.481360 | 726.883040
5 | 39226639.883421 | 792.143027
8 | 42088893.109248 | 728.145005
Time spent on getting w in terms of theta: 262 seconds

Calculating gradient
gradient_cost norm: 15683.7

lambda_square = 0.0635211
step_direction norm: 176665

step size = 5.66044e-09

Trail name: robot1_same_task_iter12
Make sure that you turned off snopt log and constraint jacobian writing.
Proceed? (Y/N)
Continue constructing the problem...
../dairlib_data/goldilocks_models/find_models/robot_1/ is a directory

Tasks settings:
duration = 0.4
N_sample_sl = 3
N_sample_gi = 3
delta_stride_length = 0.015
stride_length_0 = 0.2
delta_ground_incline = 0.05
ground_incline_0 = 0
stride length ranges from 0.1775 to 0.2225
ground incline ranges from -0.075 to 0.075

Optimization setting (outer loop):
Gradient descent method
Stochastic
Step size = 0.001
beta_momentum = 0.8
eps_regularization = 1e-08
is_add_tau_in_cost = 1
Non-zero touchdown impact
# of re-run in each iteration = 1
Failure rate threshold before seeing a all-success iteration = 0.2
method_to_solve_system_of_equations = 3
The maximum rate the cost can increase before shrinking step size = 0.15
The maximum rate the cost can increase before asking adjacent samples for help = 0.1
The maximum cost difference rate between two adjacent samples = 0.1

Optimization setting (inner loop):
max_inner_iter = 150
major_optimality_tolerance = 0.0001
major_feasibility_tolerance = 0.0001
n_node = 20

Reduced-order model setting:
Warning: Need to make sure that the implementation in DynamicsExpression agrees with n_s and n_tau.
n_s = 1, n_tau = 0
B_tau = 

rom_option = 2 (1D -- fix com vertical acceleration)
Make sure that n_s and B_tau are correct.
Proceed? (Y/N)
Continue constructing the problem...
n_feature_s = 70
n_feature_sDDot = 6

Multithreading settings:
is multithread? 1
# of threads to be used 4

Removing old thread_finished.csv files... Done.

Other settings:
is_debug? 0
is_manual_initial_theta = 0
ave_min_cost_so_far = 2.43067
has_been_all_success? 1
iteration #12 is a rerun? 1
Reading previous step direction... (will get memory issue if the file doesn't exist)
Reading previous step size... (will get memory issue if the file doesn't exist)
adjacent_sample_indices = 
 1  0  1  0  1  2  3  4  5
 3  2  5  4  3  4  7  6  7
-1  4 -1  6  5  8 -1  8 -1
-1 -1 -1 -1  7 -1 -1 -1 -1

Start iterating...
Current time: Fri Apr 10 00:15:31 2020
************ Iteration 12 *************
theta_sDDot.head(6) =  2.96396e-05  2.61483e-05  -3.5667e-07  2.29738e-05 -3.26643e-07  1.36944e-08
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  2 (0) | 0.208507 | -0.062748 | 12_2_w.csv | SolutionFound | 23.188635 | 2.474730 (0.000000)
  1 (0) | 0.197828 | -0.070603 | 12_1_w.csv | SolutionFound | 23.370221 | 2.487783 (0.000000)
  3 (0) | 0.186883 | 0.020253 | 12_3_w.csv | SolutionFound | 23.477705 | 2.392565 (0.000000)
  0 (0) | 0.184886 | -0.061470 | 12_0_w.csv | SolutionFound | 23.870407 | 2.439487 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.47769
cost_u = 0.399231
cost_lambda = 0.000166365
cost_lambda_diff = 0.0324494
cost_vel_diff = 0.0489395
cost_u_diff = 0.00622289
cost_q_hip_roll = 0.250352
cost_q_hip_yaw = 0.00235374
cost_q_quat_xyz = 0.0195115
total_cost (only the nominal traj cost terms) = 2.23692
  7 (0) | 0.192579 | 0.051561 | 12_7_w.csv | SolutionFound | 27.023081 | 2.461460 (0.000000)
  4 (0) | 0.206241 | -0.019454 | 12_4_w.csv | SolutionFound | 27.259501 | 2.419830 (0.000000)
  6 (0) | 0.189184 | 0.067457 | 12_6_w.csv | SolutionFound | 27.369200 | 2.494237 (0.000000)
  5 (0) | 0.208206 | -0.016103 | 12_5_w.csv | SolutionFound | 27.744476 | 2.421091 (0.000000)
  8 (0) | 0.219531 | 0.027142 | 12_8_w.csv | SolutionFound | 23.575905 | 2.460773 (0.000000)
  0 (1) | 0.184886 | -0.061470 | 12_0_w.csv | SolutionFound | 24.533311 | 2.439487 (0.000000)
  1 (1) | 0.197828 | -0.070603 | 12_1_w.csv | SolutionFound | 24.584453 | 2.487783 (0.000000)
  2 (1) | 0.208507 | -0.062748 | 12_2_w.csv | SolutionFound | 25.472055 | 2.474730 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.47769
cost_u = 0.399231
cost_lambda = 0.000166365
cost_lambda_diff = 0.0324494
cost_vel_diff = 0.0489395
cost_u_diff = 0.00622289
cost_q_hip_roll = 0.250352
cost_q_hip_yaw = 0.00235374
cost_q_quat_xyz = 0.0195115
total_cost (only the nominal traj cost terms) = 2.23692
  3 (1) | 0.186883 | 0.020253 | 12_3_w.csv | SolutionFound | 24.445205 | 2.392565 (0.000000)
  6 (1) | 0.189184 | 0.067457 | 12_6_w.csv | SolutionFound | 24.074859 | 2.494237 (0.000000)
  4 (1) | 0.206241 | -0.019454 | 12_4_w.csv | SolutionFound | 24.354987 | 2.419830 (0.000000)
  5 (1) | 0.208206 | -0.016103 | 12_5_w.csv | SolutionFound | 25.209515 | 2.421091 (0.000000)
  7 (1) | 0.192579 | 0.051561 | 12_7_w.csv | SolutionFound | 14.612641 | 2.461460 (0.000000)
  8 (1) | 0.219531 | 0.027142 | 12_8_w.csv | SolutionFound | 13.920358 | 2.460773 (0.000000)

Time spent on reading files of sample evaluation: 3 seconds

total_cost = 2.45022 (min so far: 2.43067)

Cost #0 went up by 1.73486%.
Cost #1 went up by 3.13367%.
Cost #2 went up by 2.32415%.
Cost #3 went up by 0.172917%.
Cost #6 went up by 2.57229%.
Cost #7 went up by 1.32801%.

Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
0 | SolutionFound | -0.087036 | 890.614 | -0.160423
3 | SolutionFound | -0.0727952 | 798.132 | -0.132191
1 | SolutionFound | -0.0900928 | 900.275 | -0.16351
2 | SolutionFound | -0.0707657 | 663.562 | -0.125469
4 | SolutionFound | -0.0883284 | 925.964 | -0.165952
7 | SolutionFound | -0.0877104 | 881.929 | -0.156599
6 | SolutionFound | -0.0895846 | 854.224 | -0.15556
5 | SolutionFound | -0.088094 | 914.928 | -0.165151
8 | SolutionFound | -0.0841279 | 862.258 | -0.152769
Time spent on extracting active (and independent rows) of A: 68 seconds

sample # | max element of abs-Pi | qi norm (this number should be close to 0)
3 | 53593225.931380 | 730.166210
2 | 68081154.937702 | 623.492824
1 | 61095964.666214 | 860.005430
0 | 58212961.909967 | 839.226376
6 | 53881616.195326 | 785.809206
7 | 43037043.073539 | 820.322882
5 | 53948031.812661 | 849.382782
4 | 53392387.691974 | 851.617509
8 | 51123827.768934 | 781.516583
Time spent on getting w in terms of theta: 262 seconds

Calculating gradient
gradient_cost norm: 38885.2

lambda_square = 0.0675145
step_direction norm: 111660

step size = 8.95577e-09

Trail name: robot1_same_task_iter13
Make sure that you turned off snopt log and constraint jacobian writing.
Proceed? (Y/N)
Continue constructing the problem...
../dairlib_data/goldilocks_models/find_models/robot_1/ is a directory

Tasks settings:
duration = 0.4
N_sample_sl = 3
N_sample_gi = 3
delta_stride_length = 0.015
stride_length_0 = 0.2
delta_ground_incline = 0.05
ground_incline_0 = 0
stride length ranges from 0.1775 to 0.2225
ground incline ranges from -0.075 to 0.075

Optimization setting (outer loop):
Gradient descent method
Stochastic
Step size = 0.001
beta_momentum = 0.8
eps_regularization = 1e-08
is_add_tau_in_cost = 1
Non-zero touchdown impact
# of re-run in each iteration = 1
Failure rate threshold before seeing a all-success iteration = 0.2
method_to_solve_system_of_equations = 3
The maximum rate the cost can increase before shrinking step size = 0.15
The maximum rate the cost can increase before asking adjacent samples for help = 0.1
The maximum cost difference rate between two adjacent samples = 0.1

Optimization setting (inner loop):
max_inner_iter = 150
major_optimality_tolerance = 0.0001
major_feasibility_tolerance = 0.0001
n_node = 20

Reduced-order model setting:
Warning: Need to make sure that the implementation in DynamicsExpression agrees with n_s and n_tau.
n_s = 1, n_tau = 0
B_tau = 

rom_option = 2 (1D -- fix com vertical acceleration)
Make sure that n_s and B_tau are correct.
Proceed? (Y/N)
Continue constructing the problem...
n_feature_s = 70
n_feature_sDDot = 6

Multithreading settings:
is multithread? 1
# of threads to be used 4

Removing old thread_finished.csv files... Done.

Other settings:
is_debug? 0
is_manual_initial_theta = 0
ave_min_cost_so_far = 2.43067
has_been_all_success? 1
iteration #13 is a rerun? 1
Reading previous step direction... (will get memory issue if the file doesn't exist)
Reading previous step size... (will get memory issue if the file doesn't exist)
adjacent_sample_indices = 
 1  0  1  0  1  2  3  4  5
 3  2  5  4  3  4  7  6  7
-1  4 -1  6  5  8 -1  8 -1
-1 -1 -1 -1  7 -1 -1 -1 -1

Start iterating...
Current time: Fri Apr 10 00:28:55 2020
************ Iteration 13 *************
theta_sDDot.head(6) =  4.06842e-05  3.62823e-05 -4.71411e-07  3.22693e-05 -4.32745e-07  1.92216e-08
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  2 (0) | 0.211708 | -0.073106 | 13_2_w.csv | SolutionFound | 22.496478 | 2.534853 (0.000000)
  1 (0) | 0.195677 | -0.066242 | 13_1_w.csv | SolutionFound | 23.156497 | 2.489773 (0.000000)
  0 (0) | 0.190187 | -0.030063 | 13_0_w.csv | SolutionFound | 23.638778 | 2.426584 (0.000000)
  3 (0) | 0.189210 | -0.001671 | 13_3_w.csv | SolutionFound | 24.279597 | 2.411106 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.4495
cost_u = 0.402377
cost_lambda = 0.000168828
cost_lambda_diff = 0.0301721
cost_vel_diff = 0.0506204
cost_u_diff = 0.00606013
cost_q_hip_roll = 0.259898
cost_q_hip_yaw = 0.00215947
cost_q_quat_xyz = 0.0202413
total_cost (only the nominal traj cost terms) = 2.22119
  5 (0) | 0.212201 | 0.008823 | 13_5_w.csv | SolutionFound | 27.409659 | 2.443947 (0.000000)
  6 (0) | 0.181442 | 0.051468 | 13_6_w.csv | SolutionFound | 27.149509 | 2.437063 (0.000000)
  7 (0) | 0.192872 | 0.028980 | 13_7_w.csv | SolutionFound | 27.823119 | 2.436589 (0.000000)
  4 (0) | 0.207387 | 0.019793 | 13_4_w.csv | SolutionFound | 35.040426 | 2.446570 (0.000000)
  8 (0) | 0.211765 | 0.072504 | 13_8_w.csv | SolutionFound | 23.911755 | 2.588632 (0.000000)
  2 (1) | 0.211708 | -0.073106 | 13_2_w.csv | SolutionFound | 24.687691 | 2.534853 (0.000000)
  1 (1) | 0.195677 | -0.066242 | 13_1_w.csv | SolutionFound | 24.927077 | 2.489773 (0.000000)
  0 (1) | 0.190187 | -0.030063 | 13_0_w.csv | SolutionFound | 24.491088 | 2.426584 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.4495
cost_u = 0.402377
cost_lambda = 0.000168828
cost_lambda_diff = 0.0301721
cost_vel_diff = 0.0506204
cost_u_diff = 0.00606013
cost_q_hip_roll = 0.259898
cost_q_hip_yaw = 0.00215947
cost_q_quat_xyz = 0.0202413
total_cost (only the nominal traj cost terms) = 2.22119
  5 (1) | 0.212201 | 0.008823 | 13_5_w.csv | SolutionFound | 24.578947 | 2.443947 (0.000000)
  3 (1) | 0.189210 | -0.001671 | 13_3_w.csv | SolutionFound | 24.610641 | 2.411106 (0.000000)
  6 (1) | 0.181442 | 0.051468 | 13_6_w.csv | SolutionFound | 23.703892 | 2.437063 (0.000000)
  7 (1) | 0.192872 | 0.028980 | 13_7_w.csv | SolutionFound | 24.447152 | 2.436589 (0.000000)
  4 (1) | 0.207387 | 0.019793 | 13_4_w.csv | SolutionFound | 13.886475 | 2.446572 (0.000000)
  8 (1) | 0.211765 | 0.072504 | 13_8_w.csv | SolutionFound | 15.679495 | 2.588632 (0.000000)

Time spent on reading files of sample evaluation: 3 seconds

total_cost = 2.46835 (min so far: 2.43067)

Cost #0 went up by 1.19647%.
Cost #1 went up by 3.21616%.
Cost #2 went up by 4.80997%.
Cost #3 went up by 0.949578%.
Cost #4 went up by 1.10504%.
Cost #5 went up by 0.944203%.
Cost #6 went up by 0.220834%.
Cost #7 went up by 0.304215%.
Cost #8 went up by 5.19593%.

Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
0 | SolutionFound | -0.107413 | 922.417 | -0.203965
3 | SolutionFound | -0.102795 | 932.479 | -0.19518
2 | SolutionFound | -0.0899072 | 587.572 | -0.158986
1 | SolutionFound | -0.104194 | 916.484 | -0.193232
7 | SolutionFound | -0.0981472 | 891.959 | -0.181623
5 | SolutionFound | -0.097988 | 890.5 | -0.183903
4 | SolutionFound | -0.0990472 | 893.508 | -0.184841
6 | SolutionFound | -0.0793475 | 625.729 | -0.140996
8 | SolutionFound | -0.11046 | 867.622 | -0.193794
Time spent on extracting active (and independent rows) of A: 67 seconds

sample # | max element of abs-Pi | qi norm (this number should be close to 0)
3 | 43438677.998508 | 888.435047
0 | 58676680.640333 | 854.206256
1 | 61512759.100573 | 892.242121
2 | 70542549.927407 | 535.362187
7 | 52130636.858869 | 844.288003
4 | 50715778.088676 | 850.937656
5 | 54879693.120170 | 846.600133
6 | 73477114.599080 | 609.816221
8 | 47887789.783421 | 822.950033
Time spent on getting w in terms of theta: 261 seconds

Calculating gradient
gradient_cost norm: 88859.9

lambda_square = 0.0958943
step_direction norm: 57258.6

step size = 1.74646e-08

Trail name: robot1_same_task_iter14
Make sure that you turned off snopt log and constraint jacobian writing.
Proceed? (Y/N)
Continue constructing the problem...
../dairlib_data/goldilocks_models/find_models/robot_1/ is a directory

Tasks settings:
duration = 0.4
N_sample_sl = 3
N_sample_gi = 3
delta_stride_length = 0.015
stride_length_0 = 0.2
delta_ground_incline = 0.05
ground_incline_0 = 0
stride length ranges from 0.1775 to 0.2225
ground incline ranges from -0.075 to 0.075

Optimization setting (outer loop):
Gradient descent method
Stochastic
Step size = 0.001
beta_momentum = 0.8
eps_regularization = 1e-08
is_add_tau_in_cost = 1
Non-zero touchdown impact
# of re-run in each iteration = 1
Failure rate threshold before seeing a all-success iteration = 0.2
method_to_solve_system_of_equations = 3
The maximum rate the cost can increase before shrinking step size = 0.15
The maximum rate the cost can increase before asking adjacent samples for help = 0.1
The maximum cost difference rate between two adjacent samples = 0.1

Optimization setting (inner loop):
max_inner_iter = 150
major_optimality_tolerance = 0.0001
major_feasibility_tolerance = 0.0001
n_node = 20

Reduced-order model setting:
Warning: Need to make sure that the implementation in DynamicsExpression agrees with n_s and n_tau.
n_s = 1, n_tau = 0
B_tau = 

rom_option = 2 (1D -- fix com vertical acceleration)
Make sure that n_s and B_tau are correct.
Proceed? (Y/N)
Continue constructing the problem...
n_feature_s = 70
n_feature_sDDot = 6

Multithreading settings:
is multithread? 1
# of threads to be used 4

Removing old thread_finished.csv files... Done.

Other settings:
is_debug? 0
is_manual_initial_theta = 0
ave_min_cost_so_far = 2.43067
has_been_all_success? 1
iteration #14 is a rerun? 1
Reading previous step direction... (will get memory issue if the file doesn't exist)
Reading previous step size... (will get memory issue if the file doesn't exist)
adjacent_sample_indices = 
 1  0  1  0  1  2  3  4  5
 3  2  5  4  3  4  7  6  7
-1  4 -1  6  5  8 -1  8 -1
-1 -1 -1 -1  7 -1 -1 -1 -1

Start iterating...
Current time: Fri Apr 10 00:42:29 2020
************ Iteration 14 *************
theta_sDDot.head(6) =  4.23414e-05   3.7488e-05 -5.92807e-07  3.30757e-05 -5.43819e-07  1.85522e-08
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  1 (0) | 0.200922 | -0.047858 | 14_1_w.csv | SolutionFound | 22.677167 | 2.428265 (0.000000)
  2 (0) | 0.211809 | -0.051575 | 14_2_w.csv | SolutionFound | 22.938022 | 2.455558 (0.000000)
  0 (0) | 0.186410 | -0.062149 | 14_0_w.csv | SolutionFound | 23.672900 | 2.433315 (0.000000)
  3 (0) | 0.186037 | -0.022548 | 14_3_w.csv | SolutionFound | 24.044448 | 2.405604 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.50185
cost_u = 0.385342
cost_lambda = 0.000158873
cost_lambda_diff = 0.0334519
cost_vel_diff = 0.0472597
cost_u_diff = 0.0057701
cost_q_hip_roll = 0.241354
cost_q_hip_yaw = 0.00369399
cost_q_quat_xyz = 0.0205126
total_cost (only the nominal traj cost terms) = 2.23939
  4 (0) | 0.203224 | 0.001446 | 14_4_w.csv | SolutionFound | 26.068874 | 2.422551 (0.000000)
  5 (0) | 0.208882 | -0.019828 | 14_5_w.csv | SolutionFound | 26.159525 | 2.434624 (0.000000)
  6 (0) | 0.191707 | 0.074097 | 14_6_w.csv | SolutionFound | 25.928014 | 2.527759 (0.000000)
  7 (0) | 0.202570 | 0.051712 | 14_7_w.csv | SolutionFound | 26.256297 | 2.487322 (0.000000)
  8 (0) | 0.208643 | 0.065351 | 14_8_w.csv | SolutionFound | 24.113458 | 2.544336 (0.000000)
  1 (1) | 0.200922 | -0.047858 | 14_1_w.csv | SolutionFound | 24.208713 | 2.428265 (0.000000)
  2 (1) | 0.211809 | -0.051575 | 14_2_w.csv | SolutionFound | 24.479399 | 2.455558 (0.000000)
  0 (1) | 0.186410 | -0.062149 | 14_0_w.csv | SolutionFound | 25.002527 | 2.433315 (0.000000)

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.50185
cost_u = 0.385342
cost_lambda = 0.000158873
cost_lambda_diff = 0.0334519
cost_vel_diff = 0.0472597
cost_u_diff = 0.0057701
cost_q_hip_roll = 0.241354
cost_q_hip_yaw = 0.00369399
cost_q_quat_xyz = 0.0205126
total_cost (only the nominal traj cost terms) = 2.23939
  4 (1) | 0.203224 | 0.001446 | 14_4_w.csv | SolutionFound | 24.125002 | 2.422551 (0.000000)
  3 (1) | 0.186037 | -0.022548 | 14_3_w.csv | SolutionFound | 24.417184 | 2.405604 (0.000000)
  5 (1) | 0.208882 | -0.019828 | 14_5_w.csv | SolutionFound | 24.604412 | 2.434624 (0.000000)
  6 (1) | 0.191707 | 0.074097 | 14_6_w.csv | SolutionFound | 24.676270 | 2.527759 (0.000000)
  7 (1) | 0.202570 | 0.051712 | 14_7_w.csv | SolutionFound | 14.120680 | 2.487322 (0.000000)
  8 (1) | 0.208643 | 0.065351 | 14_8_w.csv | SolutionFound | 14.336640 | 2.544336 (0.000000)

Time spent on reading files of sample evaluation: 3 seconds

total_cost = 2.45993 (min so far: 2.43067)

Cost #0 went up by 1.47755%.
Cost #1 went up by 0.6662%.
Cost #2 went up by 1.53152%.
Cost #3 went up by 0.718882%.
Cost #4 went up by 0.112405%.
Cost #5 went up by 0.558839%.
Cost #6 went up by 3.95075%.
Cost #7 went up by 2.39256%.
Cost #8 went up by 3.39609%.

Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
0 | SolutionFound | -0.069113 | 492.599 | -0.123934
3 | SolutionFound | -0.100138 | 927.413 | -0.188859
1 | SolutionFound | -0.067339 | 561.764 | -0.121547
2 | SolutionFound | -0.0651843 | 456.203 | -0.116504
6 | SolutionFound | -0.0953985 | 828.59 | -0.166082
7 | SolutionFound | -0.0900301 | 815.868 | -0.160951
4 | SolutionFound | -0.0940968 | 888.487 | -0.176777
5 | SolutionFound | -0.0990651 | 912.259 | -0.186009
8 | SolutionFound | -0.098558 | 839.324 | -0.173293
Time spent on extracting active (and independent rows) of A: 67 seconds

