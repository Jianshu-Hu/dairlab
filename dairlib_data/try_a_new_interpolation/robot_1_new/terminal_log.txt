Trail name: robot1_new_initial_guess
Make sure that you turned off snopt log and constraint jacobian writing.
Proceed? (Y/N)
Continue constructing the problem...
../dairlib_data/goldilocks_models/find_models/robot_1/ is a directory

Tasks settings:
duration = 0.4
N_sample_sl = 3
N_sample_gi = 3
delta_stride_length = 0.015
stride_length_0 = 0.2
delta_ground_incline = 0.05
ground_incline_0 = 0
stride length ranges from 0.1775 to 0.2225
ground incline ranges from -0.075 to 0.075

Optimization setting (outer loop):
Gradient descent method
Stochastic
Step size = 0.001
beta_momentum = 0.8
eps_regularization = 1e-08
is_add_tau_in_cost = 1
Non-zero touchdown impact
# of re-run in each iteration = 1
Failure rate threshold before seeing a all-success iteration = 0.2
method_to_solve_system_of_equations = 3
The maximum rate the cost of each sample cost can increase before shrinking step size = 0.15
The maximum rate the averaged cost can increase before shrinking step size = 0.15
The maximum rate the cost can increase before asking adjacent samples for help = 0.1
The maximum cost difference rate between two adjacent samples = 0.1

Optimization setting (inner loop):
max_inner_iter = 150
major_optimality_tolerance = 0.0001
major_feasibility_tolerance = 0.0001
n_node = 20

Reduced-order model setting:
Warning: Need to make sure that the implementation in DynamicsExpression agrees with n_s and n_tau.
n_s = 1, n_tau = 0
B_tau = 

rom_option = 2 (1D -- fix com vertical acceleration)
Make sure that n_s and B_tau are correct.
Proceed? (Y/N)
Continue constructing the problem...
n_feature_s = 70
n_feature_sDDot = 6
Make sure that you use the right initial theta.
Proceed? (Y/N)
Continue constructing the problem...

Multithreading settings:
is multithread? 1
# of threads to be used 4

Removing old thread_finished.csv files... Done.

Other settings:
is_debug? 0
is_manual_initial_theta = 0
has_been_all_success? 0
iteration #0 is a rerun? 0
adjacent_sample_indices = 
 1  0  1  0  1  2  3  4  5
 3  2  5  4  3  4  7  6  7
-1  4 -1  6  5  8 -1  8 -1
-1 -1 -1 -1  7 -1 -1 -1 -1

Start iterating...
Current time: Sat Apr 11 21:19:33 2020
************ Iteration 0 (0-time step size shrinking) *************
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  0 (0) | 0.185000 | -0.050000 |  | SolutionFound | 111.999508 | 3.781178 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (0, 0, 1, 1)
storing result...

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.50798
cost_u = 1.15614
cost_lambda = 0.000292572
cost_lambda_diff = 0.297536
cost_vel_diff = 0.150595
cost_u_diff = 0.0482803
cost_q_hip_roll = 0.497807
cost_q_hip_yaw = 0.0374936
cost_q_quat_xyz = 0.0850595
total_cost (only the nominal traj cost terms) = 3.78118
  1 (0) | 0.200000 | -0.050000 |  | SolutionFound | 156.716721 | 5.191798 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 0, 1, 1)
storing result...
  2 (0) | 0.215000 | -0.050000 |  | SolutionFound | 161.395540 | 2.661996 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 0, 1, 1)
storing result...
  4 (0) | 0.200000 | 0.000000 |  | SolutionFound | 162.449420 | 3.825137 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (4, 0, 1, 1)
storing result...
  5 (0) | 0.215000 | 0.000000 |  | SolutionFound | 168.519961 | 2.371075 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (5, 0, 1, 1)
storing result...
  6 (0) | 0.185000 | 0.050000 |  | SolutionFound | 187.173261 | 7.321199 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 0, 1, 1)
storing result...
  8 (0) | 0.215000 | 0.050000 |  | SolutionFound | 132.632621 | 4.480937 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (8, 0, 1, 1)
storing result...
  1 (1) | 0.200000 | -0.050000 | 0_1_w.csv | SolutionFound | 13.726382 | 5.191800 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 1, 1, 1)
storing result...
  2 (1) | 0.215000 | -0.050000 | 0_2_w.csv | SolutionFound | 17.550217 | 2.656510 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 1, 1, 1)
storing result...
idx #2 cost is too low below that of adjacent idx #1, so revert the flag to bad sol. Add #1 to queue
  0 (1) | 0.185000 | -0.050000 | 0_0_w.csv | SolutionFound | 195.374769 | 2.246009 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (0, 1, 1, 1)
storing result...

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.47965
cost_u = 0.396113
cost_lambda = 0.000219959
cost_lambda_diff = 0.0629415
cost_vel_diff = 0.0407306
cost_u_diff = 0.00652742
cost_q_hip_roll = 0.236081
cost_q_hip_yaw = 0.0042187
cost_q_quat_xyz = 0.019531
total_cost (only the nominal traj cost terms) = 2.24601
idx #0 got good sol, and idx #1 needs help. 
  5 (1) | 0.215000 | 0.000000 | 0_5_w.csv | SolutionFound | 18.011856 | 2.368035 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (5, 1, 1, 1)
storing result...
idx #5 cost is too low below that of adjacent idx #2, so revert the flag to bad sol. Add #2 to queue
  6 (1) | 0.185000 | 0.050000 | 0_6_w.csv | SolutionFound | 18.662437 | 7.115210 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 1, 1, 1)
storing result...
  4 (1) | 0.200000 | 0.000000 | 0_4_w.csv | SolutionFound | 112.780482 | 2.247258 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (4, 1, 1, 1)
storing result...
idx #4 got good sol, and idx #1 needs help. 
is_good_solution = 1, 0, 0, -1, 1, 1, 1, -1, -1, 
before adding idx # 1
sample_idx_waiting_to_help = 
-1 -1  5 -1 -1 -1 -1 -1 -1
-1  0 -1 -1 -1 -1 -1 -1 -1
-1  4 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
sample_idx_that_helped = 
-1  2 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
  8 (1) | 0.215000 | 0.050000 | 0_8_w.csv | SolutionFound | 21.317091 | 4.466868 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (8, 1, 1, 1)
storing result...
idx #8 cost is too high above adjacent idx #5, so add #8 to queue
is_good_solution = 1, 0, 0, -1, 1, 1, 1, -1, 0, 
before adding idx # 2
sample_idx_waiting_to_help = 
-1 -1 -1 -1 -1 -1 -1 -1  5
-1  0 -1 -1 -1 -1 -1 -1 -1
-1  4 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
sample_idx_that_helped = 
-1  2  5 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
  3 (0) | 0.185000 | 0.000000 |  | SolutionFound | 606.472465 | 5.959766 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (3, 0, 1, 1)
storing result...
is_good_solution = 1, 0, 0, -1, 1, 1, 1, -1, 0, 
before adding idx # 8
sample_idx_waiting_to_help = 
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1  0 -1 -1 -1 -1 -1 -1 -1
-1  4 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
sample_idx_that_helped = 
-1  2  5 -1 -1 -1 -1 -1  5
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
  1 (2) | 0.200000 | -0.050000 | 0_2_w.csv | SolutionFound | 17.356923 | 2.625585 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 2, 1, 1)
storing result...
idx #1 cost is too high above adjacent idx #0, so add #1 to queue
  2 (2) | 0.215000 | -0.050000 | 0_5_w.csv | SolutionFound | 64.930775 | 2.395016 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 2, 1, 1)
storing result...
idx #2 got good sol, and idx #1 needs help. 
is_good_solution = 1, 0, 1, -1, 1, 1, 1, -1, 0, 
before adding idx # 1
sample_idx_waiting_to_help = 
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1  2 -1 -1 -1 -1 -1 -1 -1
-1  0 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
sample_idx_that_helped = 
-1  4  5 -1 -1 -1 -1 -1  5
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
  8 (2) | 0.215000 | 0.050000 | 0_5_w.csv | SolutionFound | 89.505289 | 2.305957 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (8, 2, 1, 1)
storing result...
  7 (0) | 0.200000 | 0.050000 |  | SolutionFound | 424.842290 | 19.704170 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (7, 0, 1, 1)
storing result...
  1 (3) | 0.200000 | -0.050000 | 0_4_w.csv | SolutionFound | 47.771237 | 2.299397 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 3, 1, 1)
storing result...
  3 (1) | 0.185000 | 0.000000 | 0_3_w.csv | SolutionFound | 109.286667 | 2.172417 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (3, 1, 1, 1)
storing result...
idx #3 cost is too low below that of adjacent idx #6, so revert the flag to bad sol. Add #6 to queue
is_good_solution = 1, 1, 1, 1, 1, 1, 0, -1, 1, 
before adding idx # 6
sample_idx_waiting_to_help = 
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1  2 -1 -1 -1 -1 -1 -1 -1
-1  0 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
sample_idx_that_helped = 
-1  4  5 -1 -1 -1  3 -1  5
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
  6 (2) | 0.185000 | 0.050000 | 0_3_w.csv | SolutionFound | 35.061126 | 2.217827 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 2, 1, 1)
storing result...
  7 (1) | 0.200000 | 0.050000 | 0_7_w.csv | SolutionFound | 86.558626 | 2.592422 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (7, 1, 1, 1)
storing result...
idx #7 cost is too high above adjacent idx #4, so add #7 to queue
is_good_solution = 1, 1, 1, 1, 1, 1, 1, 0, 1, 
before adding idx # 7
sample_idx_waiting_to_help = 
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1  2 -1 -1 -1 -1 -1  4 -1
-1  0 -1 -1 -1 -1 -1  6 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
sample_idx_that_helped = 
-1  4  5 -1 -1 -1  3  8  5
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
  7 (2) | 0.200000 | 0.050000 | 0_8_w.csv | SolutionFound | 9.258020 | 2.278282 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (7, 2, 1, 1)
storing result...
Current time: Sat Apr 11 21:32:51 2020
************ Iteration 1 (0-time step size shrinking) *************
theta_sDDot.head(6) = 0 0 0 0 0 0
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  1 (0) | 0.194947 | -0.038183 | 0_1_w.csv | SolutionFound | 130.574090 | 2.727348 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 0, 1, 1)
storing result...
  3 (0) | 0.179463 | 0.011673 | 0_3_w.csv | SolutionFound | 134.406576 | 2.683968 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (3, 0, 1, 1)
storing result...
  0 (0) | 0.182024 | -0.036786 | 0_0_w.csv | SolutionFound | 142.750664 | 2.744719 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (0, 0, 1, 1)
storing result...

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.60437
cost_u = 0.435059
cost_lambda = 0.000230899
cost_lambda_diff = 0.0684934
cost_vel_diff = 0.0766031
cost_u_diff = 0.00971193
cost_q_hip_roll = 0.255243
cost_q_hip_yaw = 0.0024298
cost_q_quat_xyz = 0.0204882
total_cost (only the nominal traj cost terms) = 2.47263
  4 (0) | 0.203127 | 0.012774 | 0_4_w.csv | SolutionFound | 117.115038 | 2.700047 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (4, 0, 1, 1)
storing result...
  5 (0) | 0.210056 | 0.021268 | 0_5_w.csv | SolutionFound | 166.418856 | 2.802184 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (5, 0, 1, 1)
storing result...
  7 (0) | 0.196453 | 0.030267 | 0_7_w.csv | SolutionFound | 125.517098 | 2.686515 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (7, 0, 1, 1)
storing result...
  8 (0) | 0.208083 | 0.032081 | 0_8_w.csv | SolutionFound | 115.109623 | 2.708999 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (8, 0, 1, 1)
storing result...
  1 (1) | 0.194947 | -0.038183 | 1_1_w.csv | SolutionFound | 32.583837 | 2.726136 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 1, 1, 1)
storing result...
  3 (1) | 0.179463 | 0.011673 | 1_3_w.csv | SolutionFound | 24.524547 | 2.683967 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (3, 1, 1, 1)
storing result...
  0 (1) | 0.182024 | -0.036786 | 1_0_w.csv | SolutionFound | 32.433495 | 2.744111 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (0, 1, 1, 1)
storing result...

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.60338
cost_u = 0.435024
cost_lambda = 0.000230894
cost_lambda_diff = 0.068488
cost_vel_diff = 0.0766956
cost_u_diff = 0.00970397
cost_q_hip_roll = 0.255637
cost_q_hip_yaw = 0.00243158
cost_q_quat_xyz = 0.0204315
total_cost (only the nominal traj cost terms) = 2.47202
  4 (1) | 0.203127 | 0.012774 | 1_4_w.csv | SolutionFound | 24.226413 | 2.700047 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (4, 1, 1, 1)
storing result...
  5 (1) | 0.210056 | 0.021268 | 1_5_w.csv | SolutionFound | 32.712330 | 2.796052 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (5, 1, 1, 1)
storing result...
  7 (1) | 0.196453 | 0.030267 | 1_7_w.csv | SolutionFound | 32.161869 | 2.683817 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (7, 1, 1, 1)
storing result...
  8 (1) | 0.208083 | 0.032081 | 1_8_w.csv | SolutionFound | 28.550539 | 2.706420 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (8, 1, 1, 1)
storing result...
  2 (0) | 0.216066 | -0.059343 | 0_2_w.csv | SolutionFound | 1703.797377 | 12.278130 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 0, 1, 1)
storing result...
  2 (1) | 0.216066 | -0.059343 | 1_2_w.csv | SolutionFound | 194.398536 | 3.902610 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 1, 1, 1)
storing result...
idx #2 cost is too high above adjacent idx #1, so add #2 to queue
is_good_solution = 1, 1, 0, 1, 1, 1, -1, 1, 1, 
before adding idx # 2
sample_idx_waiting_to_help = 
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1  1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
sample_idx_that_helped = 
-1 -1  5 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
  6 (0) | 0.184435 | 0.072782 | 0_6_w.csv | SolutionFound | 2199.850956 | 3.085092 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 0, 1, 1)
storing result...
  6 (1) | 0.184435 | 0.072782 | 1_6_w.csv | SolutionFound | 18.004624 | 3.066542 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 1, 1, 1)
storing result...
idx #6 cost is too high above adjacent idx #3, so add #6 to queue
is_good_solution = 1, 1, 0, 1, 1, 1, 0, 1, 1, 
before adding idx # 6
sample_idx_waiting_to_help = 
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1  1 -1 -1 -1  3 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
sample_idx_that_helped = 
-1 -1  5 -1 -1 -1  7 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
  6 (2) | 0.184435 | 0.072782 | 1_7_w.csv | SolutionFound | 160.224823 | 17.033467 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 2, 1, 1)
the cost of idx #6 is higher than before, skip
idx #6 cost is too high above adjacent idx #3, so add #6 to queue
is_good_solution = 1, 1, 0, 1, 1, 1, 0, 1, 1, 
before adding idx # 6
sample_idx_waiting_to_help = 
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1  1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
sample_idx_that_helped = 
-1 -1  5 -1 -1 -1  7 -1 -1
-1 -1 -1 -1 -1 -1  3 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
  2 (2) | 0.216066 | -0.059343 | 1_5_w.csv | SolutionFound | 649.491449 | 6.311452 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 2, 1, 1)
the cost of idx #2 is higher than before, skip
idx #2 cost is too high above adjacent idx #1, so add #2 to queue
is_good_solution = 1, 1, 0, 1, 1, 1, 0, 1, 1, 
before adding idx # 2
sample_idx_waiting_to_help = 
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
sample_idx_that_helped = 
-1 -1  5 -1 -1 -1  7 -1 -1
-1 -1  1 -1 -1 -1  3 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1
  6 (3) | 0.184435 | 0.072782 | 1_3_w.csv | SolutionFound | 75.142355 | 2.770066 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 3, 1, 1)
storing result...
  2 (3) | 0.216066 | -0.059343 | 1_1_w.csv | SolutionFound | 66.615100 | 2.824248 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 3, 1, 1)
storing result...

Time spent on reading files of sample evaluation: 2 seconds

total_cost = 2.73721 (min so far: 2.73721)


Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
1 | SolutionFound | -0.291376 | 876.172 | -0.558018
3 | SolutionFound | -0.285004 | 1136.24 | -0.554526
0 | SolutionFound | -0.247083 | 871.476 | -0.473873
2 | SolutionFound | -0.286103 | 848.208 | -0.541536
6 | SolutionFound | -0.315536 | 1248.54 | -0.59539
4 | SolutionFound | -0.255543 | 868.527 | -0.497575
7 | SolutionFound | -0.308256 | 819.581 | -0.598095
5 | SolutionFound | -0.375977 | 795.935 | -0.725869
8 | SolutionFound | -0.313177 | 811.198 | -0.606729
Time spent on extracting active (and independent rows) of A: 69 seconds

sample # | max element of abs-Pi | qi norm (this number should be close to 0)
2 | 157618001.941011 | 274.732962
3 | 171339962.765903 | 673.938664
0 | 218676883.869487 | 178.377879
1 | 162678336.769492 | 316.970216
6 | 119332176.251175 | 759.151421
4 | 177875335.181295 | 373.784214
7 | 177080188.684614 | 251.313905
5 | 227049937.668128 | 395.171896
8 | 159120237.655749 | 245.121990
Time spent on getting w in terms of theta: 271 seconds

Calculating gradient
gradient_cost norm: 323713

lambda_square = 0.467611
step_direction norm: 323713

step size = 3.08915e-09

Current time: Sat Apr 11 22:22:40 2020
************ Iteration 2 (0-time step size shrinking) *************
theta_sDDot.head(6) = -5.34823e-06 -5.07383e-06  8.12854e-09 -4.81472e-06  7.55486e-09 -1.93724e-09
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  2 (0) | 0.213645 | -0.048806 | 2_2_initial_guess.csv | SolutionFound | 61.010901 | 2.683857 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 0, 1, 1)
storing result...
  3 (0) | 0.179471 | -0.015833 | 2_3_initial_guess.csv | SolutionFound | 84.495576 | 2.554776 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (3, 0, 1, 1)
storing result...
  4 (0) | 0.198600 | -0.001007 | 2_4_initial_guess.csv | SolutionFound | 39.149018 | 2.594874 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (4, 0, 1, 1)
storing result...
  0 (0) | 0.179952 | -0.055656 | 2_0_initial_guess.csv | SolutionFound | 123.956894 | 2.565707 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (0, 0, 1, 1)
storing result...

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.55502
cost_u = 0.391638
cost_lambda = 0.000184328
cost_lambda_diff = 0.0443446
cost_vel_diff = 0.0679341
cost_u_diff = 0.00864367
cost_q_hip_roll = 0.255741
cost_q_hip_yaw = 0.00184035
cost_q_quat_xyz = 0.0197275
total_cost (only the nominal traj cost terms) = 2.34508
  5 (0) | 0.212662 | 0.010842 | 2_5_initial_guess.csv | SolutionFound | 46.963650 | 2.656450 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (5, 0, 1, 1)
storing result...
  6 (0) | 0.181429 | 0.061946 | 2_6_initial_guess.csv | SolutionFound | 107.122632 | 2.600980 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 0, 1, 1)
storing result...
  7 (0) | 0.202849 | 0.060208 | 2_7_initial_guess.csv | SolutionFound | 114.788697 | 2.626637 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (7, 0, 1, 1)
storing result...
  1 (0) | 0.198597 | -0.041806 | 2_1_initial_guess.csv | SolutionFound | 294.107583 | 2.666955 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 0, 1, 1)
storing result...
  2 (1) | 0.213645 | -0.048806 | 2_2_w.csv | SolutionFound | 31.643491 | 2.681763 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 1, 1, 1)
storing result...
  3 (1) | 0.179471 | -0.015833 | 2_3_w.csv | SolutionFound | 32.484434 | 2.548831 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (3, 1, 1, 1)
storing result...
  8 (0) | 0.211404 | 0.065566 | 2_8_initial_guess.csv | SolutionFound | 153.342643 | 2.654392 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (8, 0, 1, 1)
storing result...
  0 (1) | 0.179952 | -0.055656 | 2_0_w.csv | SolutionFound | 24.196303 | 2.565707 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (0, 1, 1, 1)
storing result...
  4 (1) | 0.198600 | -0.001007 | 2_4_w.csv | SolutionFound | 32.426070 | 2.592589 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (4, 1, 1, 1)
storing result...

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.55502
cost_u = 0.391639
cost_lambda = 0.000184328
cost_lambda_diff = 0.0443446
cost_vel_diff = 0.067934
cost_u_diff = 0.00864368
cost_q_hip_roll = 0.255741
cost_q_hip_yaw = 0.00184035
cost_q_quat_xyz = 0.0197275
total_cost (only the nominal traj cost terms) = 2.34508
  5 (1) | 0.212662 | 0.010842 | 2_5_w.csv | SolutionFound | 31.488105 | 2.651568 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (5, 1, 1, 1)
storing result...
  6 (1) | 0.181429 | 0.061946 | 2_6_w.csv | SolutionFound | 32.235295 | 2.597726 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 1, 1, 1)
storing result...
  7 (1) | 0.202849 | 0.060208 | 2_7_w.csv | SolutionFound | 23.845996 | 2.626637 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (7, 1, 1, 1)
storing result...
  1 (1) | 0.198597 | -0.041806 | 2_1_w.csv | SolutionFound | 37.367734 | 2.660415 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 1, 1, 1)
storing result...
  8 (1) | 0.211404 | 0.065566 | 2_8_w.csv | SolutionFound | 24.763778 | 2.653291 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (8, 1, 1, 1)
storing result...

Time spent on reading files of sample evaluation: 2 seconds

total_cost = 2.61984 (min so far: 2.61984)


Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
3 | SolutionFound | -0.226934 | 1410.16 | -0.433464
1 | SolutionFound | -0.277397 | 1537.5 | -0.538137
2 | SolutionFound | -0.319708 | 1260.96 | -0.620041
0 | SolutionFound | -0.198327 | 855.236 | -0.364244
5 | SolutionFound | -0.350895 | 1093.61 | -0.684176
4 | SolutionFound | -0.25878 | 1391.19 | -0.503109
7 | SolutionFound | -0.190111 | 830.473 | -0.361846
6 | SolutionFound | -0.200976 | 1295.68 | -0.384641
8 | SolutionFound | -0.18305 | 779.22 | -0.346522
Time spent on extracting active (and independent rows) of A: 68 seconds

sample # | max element of abs-Pi | qi norm (this number should be close to 0)
1 | 145794903.780998 | 1388.488376
0 | 116155037.313110 | 384.209435
3 | 116513813.404780 | 1180.724786
2 | 151905202.245349 | 1107.561735
4 | 115584997.963860 | 1234.239855
5 | 138361423.784467 | 946.026272
6 | 136362682.881081 | 1048.423673
7 | 178032966.954492 | 522.735346
8 | 183244606.579089 | 446.164824
Time spent on getting w in terms of theta: 265 seconds

Calculating gradient
gradient_cost norm: 220276

lambda_square = 0.289499
step_direction norm: 477102

step size = 2.09599e-09

Current time: Sat Apr 11 22:35:08 2020
************ Iteration 3 (0-time step size shrinking) *************
theta_sDDot.head(6) = -1.08884e-05 -1.03144e-05  2.35086e-08 -9.77307e-06  2.20358e-08 -4.39369e-09
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  0 (0) | 0.181414 | -0.046278 | 3_0_initial_guess.csv | SolutionFound | 45.992753 | 2.510916 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (0, 0, 1, 1)
storing result...
  3 (0) | 0.182727 | 0.016663 | 3_3_initial_guess.csv | SolutionFound | 47.260226 | 2.487912 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (3, 0, 1, 1)
storing result...

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.50406
cost_u = 0.393417
cost_lambda = 0.00019303
cost_lambda_diff = 0.0400048
cost_vel_diff = 0.0646672
cost_u_diff = 0.00733684
cost_q_hip_roll = 0.247784
cost_q_hip_yaw = 0.00232837
cost_q_quat_xyz = 0.019043
total_cost (only the nominal traj cost terms) = 2.27883
  4 (0) | 0.203581 | 0.021537 | 3_4_initial_guess.csv | SolutionFound | 47.588975 | 2.537281 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (4, 0, 1, 1)
storing result...
  5 (0) | 0.220151 | 0.021890 | 3_5_initial_guess.csv | SolutionFound | 47.100511 | 2.570912 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (5, 0, 1, 1)
storing result...
  1 (0) | 0.207083 | -0.050991 | 3_1_initial_guess.csv | SolutionFound | 114.872025 | 2.512738 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 0, 1, 1)
storing result...
  2 (0) | 0.217388 | -0.055443 | 3_2_initial_guess.csv | SolutionFound | 168.955138 | 2.554918 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 0, 1, 1)
storing result...
  6 (0) | 0.189666 | 0.039765 | 3_6_initial_guess.csv | SolutionFound | 47.028940 | 2.513087 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 0, 1, 1)
storing result...
  8 (0) | 0.211517 | 0.036002 | 3_8_initial_guess.csv | SolutionFound | 47.309590 | 2.562015 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (8, 0, 1, 1)
storing result...
  7 (0) | 0.199853 | 0.056967 | 3_7_initial_guess.csv | SolutionFound | 47.881015 | 2.568209 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (7, 0, 1, 1)
storing result...
  0 (1) | 0.181414 | -0.046278 | 3_0_w.csv | SolutionFound | 31.828708 | 2.508695 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (0, 1, 1, 1)
storing result...
  3 (1) | 0.182727 | 0.016663 | 3_3_w.csv | SolutionFound | 32.172052 | 2.485750 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (3, 1, 1, 1)
storing result...
  4 (1) | 0.203581 | 0.021537 | 3_4_w.csv | SolutionFound | 32.186114 | 2.534976 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (4, 1, 1, 1)
storing result...
  1 (1) | 0.207083 | -0.050991 | 3_1_w.csv | SolutionFound | 32.355861 | 2.510472 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 1, 1, 1)
storing result...

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.50466
cost_u = 0.393045
cost_lambda = 0.000192553
cost_lambda_diff = 0.0397099
cost_vel_diff = 0.0644387
cost_u_diff = 0.00733396
cost_q_hip_roll = 0.246286
cost_q_hip_yaw = 0.00224115
cost_q_quat_xyz = 0.0192258
total_cost (only the nominal traj cost terms) = 2.27713
  5 (1) | 0.220151 | 0.021890 | 3_5_w.csv | SolutionFound | 31.311993 | 2.567765 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (5, 1, 1, 1)
storing result...
  2 (1) | 0.217388 | -0.055443 | 3_2_w.csv | SolutionFound | 33.664941 | 2.554388 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 1, 1, 1)
storing result...
  6 (1) | 0.189666 | 0.039765 | 3_6_w.csv | SolutionFound | 32.899471 | 2.511126 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 1, 1, 1)
storing result...
  8 (1) | 0.211517 | 0.036002 | 3_8_w.csv | SolutionFound | 33.599895 | 2.559632 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (8, 1, 1, 1)
storing result...
  7 (1) | 0.199853 | 0.056967 | 3_7_w.csv | SolutionFound | 20.640153 | 2.565373 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (7, 1, 1, 1)
storing result...

Time spent on reading files of sample evaluation: 2 seconds

total_cost = 2.53313 (min so far: 2.53313)


Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
3 | SolutionFound | -0.168639 | 1538.86 | -0.326172
0 | SolutionFound | -0.18717 | 1480.74 | -0.34963
2 | SolutionFound | -0.15141 | 769.848 | -0.285617
1 | SolutionFound | -0.138088 | 844.314 | -0.261134
4 | SolutionFound | -0.191316 | 1042.46 | -0.36621
6 | SolutionFound | -0.158481 | 1289.56 | -0.301582
5 | SolutionFound | -0.218247 | 965.935 | -0.420838
7 | SolutionFound | -0.162813 | 969.846 | -0.308685
8 | SolutionFound | -0.192179 | 907.317 | -0.368627
Time spent on extracting active (and independent rows) of A: 67 seconds

sample # | max element of abs-Pi | qi norm (this number should be close to 0)
3 | 65396917.339452 | 1416.055911
2 | 130776736.570726 | 556.267680
0 | 80607804.780321 | 1355.604228
1 | 146336617.934383 | 641.260537
5 | 71386209.528150 | 822.280241
4 | 65318939.277203 | 861.260186
6 | 65212639.224611 | 1137.173332
7 | 65400398.444103 | 775.009697
8 | 79133395.072338 | 733.776429
Time spent on getting w in terms of theta: 263 seconds

Calculating gradient
gradient_cost norm: 124782

lambda_square = 0.174966
step_direction norm: 505167

step size = 1.97954e-09

Current time: Sat Apr 11 22:46:02 2020
************ Iteration 4 (0-time step size shrinking) *************
theta_sDDot.head(6) = -1.65995e-05 -1.57056e-05  4.08649e-08 -1.48635e-05  3.82715e-08 -6.88265e-09
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  3 (0) | 0.192060 | -0.022379 | 4_3_initial_guess.csv | SolutionFound | 38.746382 | 2.464704 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (3, 0, 1, 1)
storing result...
  1 (0) | 0.203052 | -0.029758 | 4_1_initial_guess.csv | SolutionFound | 46.924960 | 2.470589 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 0, 1, 1)
storing result...
  5 (0) | 0.215144 | -0.023542 | 4_5_initial_guess.csv | SolutionFound | 48.074851 | 2.493046 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (5, 0, 1, 1)
storing result...
  0 (0) | 0.188861 | -0.056068 | 4_0_initial_guess.csv | SolutionFound | 115.490620 | 2.439698 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (0, 0, 1, 1)
storing result...
  2 (0) | 0.210028 | -0.064966 | 4_2_initial_guess.csv | SolutionFound | 123.364967 | 2.512495 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 0, 1, 1)
storing result...

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.49464
cost_u = 0.379564
cost_lambda = 0.00016327
cost_lambda_diff = 0.0354329
cost_vel_diff = 0.0577072
cost_u_diff = 0.00742143
cost_q_hip_roll = 0.243497
cost_q_hip_yaw = 0.0042077
cost_q_quat_xyz = 0.0189266
total_cost (only the nominal traj cost terms) = 2.24156
  7 (0) | 0.195345 | 0.025170 | 4_7_initial_guess.csv | SolutionFound | 39.202947 | 2.479585 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (7, 0, 1, 1)
storing result...
  4 (0) | 0.198300 | -0.011468 | 4_4_initial_guess.csv | SolutionFound | 119.173035 | 2.469716 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (4, 0, 1, 1)
storing result...
  6 (0) | 0.186413 | 0.058507 | 4_6_initial_guess.csv | SolutionFound | 54.346418 | 2.513733 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 0, 1, 1)
storing result...
  3 (1) | 0.192060 | -0.022379 | 4_3_w.csv | SolutionFound | 24.287965 | 2.464704 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (3, 1, 1, 1)
storing result...
  1 (1) | 0.203052 | -0.029758 | 4_1_w.csv | SolutionFound | 24.282105 | 2.470587 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 1, 1, 1)
storing result...
  5 (1) | 0.215144 | -0.023542 | 4_5_w.csv | SolutionFound | 32.222883 | 2.493384 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (5, 1, 1, 1)
storing result...
  0 (1) | 0.188861 | -0.056068 | 4_0_w.csv | SolutionFound | 33.261607 | 2.438664 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (0, 1, 1, 1)
storing result...
  2 (1) | 0.210028 | -0.064966 | 4_2_w.csv | SolutionFound | 32.274657 | 2.511399 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 1, 1, 1)
storing result...
  8 (0) | 0.221229 | 0.062314 | 4_8_initial_guess.csv | SolutionFound | 128.800080 | 2.605843 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (8, 0, 1, 1)
storing result...

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.49674
cost_u = 0.379405
cost_lambda = 0.000163087
cost_lambda_diff = 0.0352794
cost_vel_diff = 0.0576483
cost_u_diff = 0.00740895
cost_q_hip_roll = 0.241426
cost_q_hip_yaw = 0.00368835
cost_q_quat_xyz = 0.0189859
total_cost (only the nominal traj cost terms) = 2.24074
  7 (1) | 0.195345 | 0.025170 | 4_7_w.csv | SolutionFound | 31.871750 | 2.476925 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (7, 1, 1, 1)
storing result...
  8 (1) | 0.221229 | 0.062314 | 4_8_w.csv | SolutionFound | 21.020917 | 2.605843 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (8, 1, 1, 1)
storing result...
  6 (1) | 0.186413 | 0.058507 | 4_6_w.csv | SolutionFound | 24.445723 | 2.513732 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 1, 1, 1)
storing result...
  4 (1) | 0.198300 | -0.011468 | 4_4_w.csv | SolutionFound | 28.785189 | 2.467517 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (4, 1, 1, 1)
storing result...

Time spent on reading files of sample evaluation: 2 seconds

total_cost = 2.49364 (min so far: 2.49364)

Cost #6 went up by 0.103539%.
Cost #8 went up by 1.80534%.

Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
1 | SolutionFound | -0.144931 | 1130.66 | -0.276733
0 | SolutionFound | -0.107406 | 823.853 | -0.184875
3 | SolutionFound | -0.151181 | 1325.99 | -0.291186
2 | SolutionFound | -0.104415 | 716.762 | -0.191803
4 | SolutionFound | -0.152432 | 1230.35 | -0.29362
6 | SolutionFound | -0.132175 | 1253.79 | -0.244448
7 | SolutionFound | -0.147749 | 1140.33 | -0.280327
5 | SolutionFound | -0.157032 | 931.406 | -0.301147
8 | SolutionFound | -0.260295 | 708.648 | -0.496353
Time spent on extracting active (and independent rows) of A: 67 seconds

sample # | max element of abs-Pi | qi norm (this number should be close to 0)
1 | 45044118.493184 | 1081.990108
3 | 46116666.886166 | 1292.053107
0 | 97879913.913597 | 670.791689
2 | 98164835.774797 | 568.325664
4 | 52860027.943294 | 1112.583609
5 | 68991480.479421 | 803.914179
7 | 44916335.152819 | 998.535144
6 | 44106156.507616 | 1108.600234
8 | 58524221.693605 | 568.957296
Time spent on getting w in terms of theta: 264 seconds

Calculating gradient
gradient_cost norm: 40308.6

lambda_square = 0.114278
step_direction norm: 441934

step size = 2.26278e-09

Current time: Sat Apr 11 22:57:05 2020
************ Iteration 5 (0-time step size shrinking) *************
theta_sDDot.head(6) = -2.22592e-05 -2.10465e-05  4.53763e-08 -1.99045e-05   4.2574e-08 -9.12201e-09
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  1 (0) | 0.201525 | -0.029860 | 5_1_initial_guess.csv | SolutionFound | 38.886673 | 2.466761 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 0, 1, 1)
storing result...
  2 (0) | 0.211486 | -0.039124 | 5_2_initial_guess.csv | SolutionFound | 39.095657 | 2.490386 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 0, 1, 1)
storing result...
  3 (0) | 0.179278 | 0.006939 | 5_3_initial_guess.csv | SolutionFound | 40.028542 | 2.425974 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (3, 0, 1, 1)
storing result...
  0 (0) | 0.178070 | -0.051424 | 5_0_initial_guess.csv | SolutionFound | 46.649910 | 2.439974 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (0, 0, 1, 1)
storing result...

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.45103
cost_u = 0.399634
cost_lambda = 0.000177956
cost_lambda_diff = 0.0345009
cost_vel_diff = 0.0560361
cost_u_diff = 0.00703789
cost_q_hip_roll = 0.253233
cost_q_hip_yaw = 0.0040225
cost_q_quat_xyz = 0.018901
total_cost (only the nominal traj cost terms) = 2.22458
  5 (0) | 0.214231 | -0.016627 | 5_5_initial_guess.csv | SolutionFound | 46.677849 | 2.480343 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (5, 0, 1, 1)
storing result...
  6 (0) | 0.183837 | 0.074284 | 5_6_initial_guess.csv | SolutionFound | 109.002960 | 2.517693 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 0, 1, 1)
storing result...
  4 (0) | 0.203639 | -0.022001 | 5_4_initial_guess.csv | SolutionFound | 123.310214 | 2.402900 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (4, 0, 1, 1)
storing result...
  7 (0) | 0.198663 | 0.061827 | 5_7_initial_guess.csv | SolutionFound | 139.664445 | 2.506106 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (7, 0, 1, 1)
storing result...
  1 (1) | 0.201525 | -0.029860 | 5_1_w.csv | SolutionFound | 24.323283 | 2.466761 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 1, 1, 1)
storing result...
  2 (1) | 0.211486 | -0.039124 | 5_2_w.csv | SolutionFound | 39.345192 | 2.490397 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 1, 1, 1)
storing result...
  0 (1) | 0.178070 | -0.051424 | 5_0_w.csv | SolutionFound | 24.245564 | 2.439974 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (0, 1, 1, 1)
storing result...
  3 (1) | 0.179278 | 0.006939 | 5_3_w.csv | SolutionFound | 32.503101 | 2.422886 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (3, 1, 1, 1)
storing result...
  8 (0) | 0.216445 | 0.033054 | 5_8_initial_guess.csv | SolutionFound | 137.175235 | 2.472684 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (8, 0, 1, 1)
storing result...

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.45104
cost_u = 0.399634
cost_lambda = 0.000177956
cost_lambda_diff = 0.0345009
cost_vel_diff = 0.0560361
cost_u_diff = 0.00703789
cost_q_hip_roll = 0.253233
cost_q_hip_yaw = 0.0040225
cost_q_quat_xyz = 0.018901
total_cost (only the nominal traj cost terms) = 2.22458
  5 (1) | 0.214231 | -0.016627 | 5_5_w.csv | SolutionFound | 30.962588 | 2.477115 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (5, 1, 1, 1)
storing result...
  6 (1) | 0.183837 | 0.074284 | 5_6_w.csv | SolutionFound | 32.260280 | 2.515326 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 1, 1, 1)
storing result...
  4 (1) | 0.203639 | -0.022001 | 5_4_w.csv | SolutionFound | 31.320903 | 2.402345 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (4, 1, 1, 1)
storing result...
  7 (1) | 0.198663 | 0.061827 | 5_7_w.csv | SolutionFound | 32.084957 | 2.504806 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (7, 1, 1, 1)
storing result...
  8 (1) | 0.216445 | 0.033054 | 5_8_w.csv | SolutionFound | 24.094855 | 2.471341 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (8, 1, 1, 1)
storing result...

Time spent on reading files of sample evaluation: 2 seconds

total_cost = 2.46566 (min so far: 2.46566)

Cost #0 went up by 0.053718%.
Cost #6 went up by 0.167255%.
Cost #7 went up by 1.126%.

Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
1 | SolutionFound | -0.145181 | 1126.31 | -0.276859
0 | SolutionFound | -0.138295 | 1166.59 | -0.246566
3 | SolutionFound | -0.124717 | 1211.73 | -0.238479
2 | SolutionFound | -0.146113 | 1009 | -0.276095
5 | SolutionFound | -0.148681 | 894.149 | -0.28305
4 | SolutionFound | -0.0713444 | 579.041 | -0.13259
6 | SolutionFound | -0.103406 | 928.486 | -0.178196
7 | SolutionFound | -0.0896298 | 782.501 | -0.157904
8 | SolutionFound | -0.0919303 | 632.655 | -0.168661
Time spent on extracting active (and independent rows) of A: 67 seconds

sample # | max element of abs-Pi | qi norm (this number should be close to 0)
1 | 48439997.880087 | 1074.553802
3 | 41334177.485470 | 1171.095499
0 | 41134928.026366 | 1126.420286
2 | 43208642.197337 | 949.195159
6 | 75435465.011169 | 800.746467
5 | 59437889.865336 | 828.507299
7 | 83177027.020368 | 646.064198
4 | 79352213.919471 | 397.486144
8 | 70737213.309887 | 473.078052
Time spent on getting w in terms of theta: 264 seconds

Calculating gradient
gradient_cost norm: 19900.1

lambda_square = 0.081067
step_direction norm: 343286

step size = 2.91303e-09

Current time: Sat Apr 11 23:08:19 2020
************ Iteration 6 (0-time step size shrinking) *************
theta_sDDot.head(6) =  -2.7549e-05  -2.6043e-05  4.55809e-08 -2.46251e-05  4.28608e-08 -1.11666e-08
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  2 (0) | 0.209893 | -0.042998 | 6_2_initial_guess.csv | SolutionFound | 39.411560 | 2.499346 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 0, 1, 1)
storing result...
  0 (0) | 0.191314 | -0.056750 | 6_0_initial_guess.csv | SolutionFound | 46.439394 | 2.476173 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (0, 0, 1, 1)
storing result...
  1 (0) | 0.207257 | -0.038623 | 6_1_initial_guess.csv | SolutionFound | 46.666437 | 2.478549 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 0, 1, 1)
storing result...
  3 (0) | 0.192460 | 0.001264 | 6_3_initial_guess.csv | SolutionFound | 47.753866 | 2.429652 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (3, 0, 1, 1)
storing result...

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.4847
cost_u = 0.409181
cost_lambda = 0.000174543
cost_lambda_diff = 0.0356149
cost_vel_diff = 0.0546672
cost_u_diff = 0.00716279
cost_q_hip_roll = 0.250727
cost_q_hip_yaw = 0.00440716
cost_q_quat_xyz = 0.0182976
total_cost (only the nominal traj cost terms) = 2.26494
  6 (0) | 0.184056 | 0.066930 | 6_6_initial_guess.csv | SolutionFound | 39.047215 | 2.511909 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 0, 1, 1)
storing result...
  4 (0) | 0.196104 | 0.011709 | 6_4_initial_guess.csv | SolutionFound | 46.206438 | 2.436315 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (4, 0, 1, 1)
storing result...
  5 (0) | 0.222447 | -0.014822 | 6_5_initial_guess.csv | SolutionFound | 46.891240 | 2.483782 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (5, 0, 1, 1)
storing result...
  7 (0) | 0.197581 | 0.035627 | 6_7_initial_guess.csv | SolutionFound | 48.097174 | 2.463851 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (7, 0, 1, 1)
storing result...
  2 (1) | 0.209893 | -0.042998 | 6_2_w.csv | SolutionFound | 23.693419 | 2.499348 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 1, 1, 1)
storing result...
  0 (1) | 0.191314 | -0.056750 | 6_0_w.csv | SolutionFound | 24.259329 | 2.476173 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (0, 1, 1, 1)
storing result...
  1 (1) | 0.207257 | -0.038623 | 6_1_w.csv | SolutionFound | 24.670030 | 2.478549 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 1, 1, 1)
storing result...

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.48471
cost_u = 0.409182
cost_lambda = 0.000174543
cost_lambda_diff = 0.0356149
cost_vel_diff = 0.0546672
cost_u_diff = 0.00716279
cost_q_hip_roll = 0.250727
cost_q_hip_yaw = 0.00440716
cost_q_quat_xyz = 0.0182976
total_cost (only the nominal traj cost terms) = 2.26494
  3 (1) | 0.192460 | 0.001264 | 6_3_w.csv | SolutionFound | 32.063833 | 2.427077 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (3, 1, 1, 1)
storing result...
  8 (0) | 0.215971 | 0.052733 | 6_8_initial_guess.csv | SolutionFound | 76.248650 | 2.529079 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (8, 0, 1, 1)
storing result...
  6 (1) | 0.184056 | 0.066930 | 6_6_w.csv | SolutionFound | 31.854600 | 2.508616 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 1, 1, 1)
storing result...
  4 (1) | 0.196104 | 0.011709 | 6_4_w.csv | SolutionFound | 32.340419 | 2.433942 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (4, 1, 1, 1)
storing result...
  8 (1) | 0.215971 | 0.052733 | 6_8_w.csv | SolutionFound | 16.594063 | 2.529077 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (8, 1, 1, 1)
storing result...
  5 (1) | 0.222447 | -0.014822 | 6_5_w.csv | SolutionFound | 24.208040 | 2.483783 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (5, 1, 1, 1)
storing result...
  7 (1) | 0.197581 | 0.035627 | 6_7_w.csv | SolutionFound | 30.803772 | 2.461603 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (7, 1, 1, 1)
storing result...

Time spent on reading files of sample evaluation: 2 seconds

total_cost = 2.47757 (min so far: 2.46566)

Average cost went up by 0.48317%.
Cost #0 went up by 1.53814%.
Cost #1 went up by 0.477955%.
Cost #2 went up by 0.35938%.
Cost #3 went up by 0.172934%.
Cost #4 went up by 1.31538%.
Cost #5 went up by 0.269265%.
Cost #8 went up by 2.33638%.

Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
0 | SolutionFound | -0.135241 | 1022.45 | -0.252496
3 | SolutionFound | -0.118497 | 943.448 | -0.224826
1 | SolutionFound | -0.135628 | 870.377 | -0.255577
2 | SolutionFound | -0.154712 | 955.138 | -0.291406
6 | SolutionFound | -0.117034 | 981.586 | -0.208811
5 | SolutionFound | -0.142576 | 852.094 | -0.270319
7 | SolutionFound | -0.113605 | 830.119 | -0.209302
4 | SolutionFound | -0.11622 | 892.545 | -0.21878
8 | SolutionFound | -0.105908 | 647.109 | -0.190341
Time spent on extracting active (and independent rows) of A: 67 seconds

sample # | max element of abs-Pi | qi norm (this number should be close to 0)
3 | 41227187.559698 | 875.822828
1 | 55666507.271844 | 793.211183
2 | 45697322.749757 | 866.406996
0 | 41210712.068693 | 945.733798
6 | 47529363.302997 | 926.039442
5 | 41696549.803613 | 768.934446
7 | 40156374.356611 | 754.952123
4 | 40453762.673633 | 815.681762
8 | 49891029.837438 | 475.163159
Time spent on getting w in terms of theta: 262 seconds

Calculating gradient
gradient_cost norm: 66902.1

lambda_square = 0.0927147
step_direction norm: 211957

step size = 4.71793e-09

Current time: Sat Apr 11 23:18:11 2020
************ Iteration 7 (0-time step size shrinking) *************
theta_sDDot.head(6) = -3.15229e-05 -2.98445e-05  3.18708e-08 -2.82616e-05   3.0221e-08 -1.26524e-08
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  0 (0) | 0.188758 | -0.034944 | 7_0_initial_guess.csv | SolutionFound | 46.150293 | 2.457942 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (0, 0, 1, 1)
storing result...
  3 (0) | 0.179336 | 0.019718 | 7_3_initial_guess.csv | SolutionFound | 46.742154 | 2.439178 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (3, 0, 1, 1)
storing result...
  1 (0) | 0.205976 | -0.028329 | 7_1_initial_guess.csv | SolutionFound | 53.539215 | 2.473402 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 0, 1, 1)
storing result...

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.46161
cost_u = 0.413284
cost_lambda = 0.000177007
cost_lambda_diff = 0.0365844
cost_vel_diff = 0.0516401
cost_u_diff = 0.00715776
cost_q_hip_roll = 0.251524
cost_q_hip_yaw = 0.00335477
cost_q_quat_xyz = 0.018738
total_cost (only the nominal traj cost terms) = 2.24407
  2 (0) | 0.215824 | -0.059607 | 7_2_initial_guess.csv | SolutionFound | 86.229769 | 2.543875 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 0, 1, 1)
storing result...
  4 (0) | 0.202967 | -0.002390 | 7_4_initial_guess.csv | SolutionFound | 39.094776 | 2.461936 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (4, 0, 1, 1)
storing result...
  5 (0) | 0.209781 | -0.009419 | 7_5_initial_guess.csv | SolutionFound | 46.511993 | 2.476360 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (5, 0, 1, 1)
storing result...
  6 (0) | 0.181438 | 0.058976 | 7_6_initial_guess.csv | SolutionFound | 46.573822 | 2.504363 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 0, 1, 1)
storing result...
  7 (0) | 0.196463 | 0.041952 | 7_7_initial_guess.csv | SolutionFound | 46.239377 | 2.495744 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (7, 0, 1, 1)
storing result...
  0 (1) | 0.188758 | -0.034944 | 7_0_w.csv | SolutionFound | 24.177669 | 2.457943 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (0, 1, 1, 1)
storing result...
  8 (0) | 0.212580 | 0.047981 | 7_8_initial_guess.csv | SolutionFound | 39.517337 | 2.538680 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (8, 0, 1, 1)
storing result...
  3 (1) | 0.179336 | 0.019718 | 7_3_w.csv | SolutionFound | 32.631669 | 2.436154 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (3, 1, 1, 1)
storing result...

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.46161
cost_u = 0.413285
cost_lambda = 0.000177007
cost_lambda_diff = 0.0365844
cost_vel_diff = 0.0516401
cost_u_diff = 0.00715776
cost_q_hip_roll = 0.251524
cost_q_hip_yaw = 0.00335476
cost_q_quat_xyz = 0.018738
total_cost (only the nominal traj cost terms) = 2.24407
  2 (1) | 0.215824 | -0.059607 | 7_2_w.csv | SolutionFound | 24.140779 | 2.543876 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 1, 1, 1)
storing result...
  1 (1) | 0.205976 | -0.028329 | 7_1_w.csv | SolutionFound | 31.001824 | 2.471142 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 1, 1, 1)
storing result...
  4 (1) | 0.202967 | -0.002390 | 7_4_w.csv | SolutionFound | 32.178006 | 2.459275 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (4, 1, 1, 1)
storing result...
  5 (1) | 0.209781 | -0.009419 | 7_5_w.csv | SolutionFound | 31.978988 | 2.473687 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (5, 1, 1, 1)
storing result...
  6 (1) | 0.181438 | 0.058976 | 7_6_w.csv | SolutionFound | 28.625143 | 2.501913 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 1, 1, 1)
storing result...
  7 (1) | 0.196463 | 0.041952 | 7_7_w.csv | SolutionFound | 29.883688 | 2.493369 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (7, 1, 1, 1)
storing result...
  8 (1) | 0.212580 | 0.047981 | 7_8_w.csv | SolutionFound | 25.677597 | 2.536323 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (8, 1, 1, 1)
storing result...

Time spent on reading files of sample evaluation: 2 seconds

total_cost = 2.48596 (min so far: 2.46566)

Average cost went up by 0.823444%.
Cost #0 went up by 0.790598%.
Cost #1 went up by 0.177561%.
Cost #2 went up by 2.14745%.
Cost #3 went up by 0.54728%.
Cost #4 went up by 2.37019%.
Cost #7 went up by 1.29062%.
Cost #8 went up by 2.62934%.

Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
1 | SolutionFound | -0.149893 | 888.219 | -0.283778
0 | SolutionFound | -0.145595 | 905.401 | -0.27623
2 | SolutionFound | -0.14837 | 796.591 | -0.276104
3 | SolutionFound | -0.132222 | 902.69 | -0.2493
6 | SolutionFound | -0.139876 | 942.965 | -0.25375
4 | SolutionFound | -0.274068 | 741.359 | -0.525198
5 | SolutionFound | -0.279419 | 731.209 | -0.535452
7 | SolutionFound | -0.258342 | 686.702 | -0.490877
8 | SolutionFound | -0.259985 | 597.416 | -0.491055
Time spent on extracting active (and independent rows) of A: 67 seconds

sample # | max element of abs-Pi | qi norm (this number should be close to 0)
3 | 44345635.158339 | 737.442835
1 | 46226812.533969 | 768.341332
2 | 50866037.595993 | 623.240146
0 | 50940023.972321 | 824.103393
4 | 32928106.738978 | 732.619715
5 | 33609073.476245 | 722.789671
7 | 30900181.487909 | 684.056099
6 | 36928102.417188 | 778.449154
8 | 33761751.897539 | 559.807936
Time spent on getting w in terms of theta: 262 seconds

Calculating gradient
gradient_cost norm: 114010

lambda_square = 0.253478
step_direction norm: 76424.1

step size = 1.30849e-08

Current time: Sat Apr 11 23:28:12 2020
************ Iteration 8 (0-time step size shrinking) *************
theta_sDDot.head(6) =  -2.5286e-05 -2.43704e-05 -1.02857e-07 -2.34792e-05 -9.43968e-08 -1.06096e-08
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  2 (0) | 0.217460 | -0.054288 | 8_2_initial_guess.csv | SolutionFound | 46.074174 | 2.557564 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 0, 1, 1)
storing result...
  3 (0) | 0.188803 | -0.016621 | 8_3_initial_guess.csv | SolutionFound | 46.400925 | 2.458013 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (3, 0, 1, 1)
storing result...
  1 (0) | 0.199997 | -0.034599 | 8_1_initial_guess.csv | SolutionFound | 107.741781 | 2.460159 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 0, 1, 1)
storing result...
  4 (0) | 0.202211 | 0.016874 | 8_4_initial_guess.csv | SolutionFound | 47.701515 | 2.485560 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (4, 0, 1, 1)
storing result...
  5 (0) | 0.207822 | 0.022705 | 8_5_initial_guess.csv | SolutionFound | 54.313535 | 2.499557 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (5, 0, 1, 1)
storing result...
  0 (0) | 0.182212 | -0.071987 | 8_0_initial_guess.csv | SolutionFound | 123.550506 | 2.498286 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (0, 0, 1, 1)
storing result...

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.55143
cost_u = 0.396867
cost_lambda = 0.000166224
cost_lambda_diff = 0.0403969
cost_vel_diff = 0.0458662
cost_u_diff = 0.0068331
cost_q_hip_roll = 0.232866
cost_q_hip_yaw = 0.00276844
cost_q_quat_xyz = 0.0194753
total_cost (only the nominal traj cost terms) = 2.29667
  2 (1) | 0.217460 | -0.054288 | 8_2_w.csv | SolutionFound | 24.951642 | 2.557566 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 1, 1, 1)
storing result...
  6 (0) | 0.190187 | 0.049269 | 8_6_initial_guess.csv | SolutionFound | 53.693811 | 2.514904 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 0, 1, 1)
storing result...
  7 (0) | 0.201360 | 0.054995 | 8_7_initial_guess.csv | SolutionFound | 55.404371 | 2.551134 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (7, 0, 1, 1)
storing result...
  8 (0) | 0.213660 | 0.055433 | 8_8_initial_guess.csv | SolutionFound | 54.822806 | 2.578957 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (8, 0, 1, 1)
storing result...
  3 (1) | 0.188803 | -0.016621 | 8_3_w.csv | SolutionFound | 31.591164 | 2.455937 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (3, 1, 1, 1)
storing result...
  1 (1) | 0.199997 | -0.034599 | 8_1_w.csv | SolutionFound | 31.893618 | 2.459076 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 1, 1, 1)
storing result...
  4 (1) | 0.202211 | 0.016874 | 8_4_w.csv | SolutionFound | 31.617509 | 2.483244 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (4, 1, 1, 1)
storing result...
  5 (1) | 0.207822 | 0.022705 | 8_5_w.csv | SolutionFound | 32.525407 | 2.497253 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (5, 1, 1, 1)
storing result...
  0 (1) | 0.182212 | -0.071987 | 8_0_w.csv | SolutionFound | 31.795881 | 2.497167 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (0, 1, 1, 1)
storing result...
  6 (1) | 0.190187 | 0.049269 | 8_6_w.csv | SolutionFound | 32.057260 | 2.512588 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 1, 1, 1)
storing result...

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.54959
cost_u = 0.396559
cost_lambda = 0.000166109
cost_lambda_diff = 0.0403056
cost_vel_diff = 0.0458894
cost_u_diff = 0.00682371
cost_q_hip_roll = 0.234279
cost_q_hip_yaw = 0.00269607
cost_q_quat_xyz = 0.0193759
total_cost (only the nominal traj cost terms) = 2.29568
  7 (1) | 0.201360 | 0.054995 | 8_7_w.csv | SolutionFound | 31.154388 | 2.548883 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (7, 1, 1, 1)
storing result...
  8 (1) | 0.213660 | 0.055433 | 8_8_w.csv | SolutionFound | 31.327954 | 2.576537 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (8, 1, 1, 1)
storing result...

Time spent on reading files of sample evaluation: 2 seconds

total_cost = 2.50981 (min so far: 2.46566)

Average cost went up by 1.79041%.
Cost #0 went up by 2.39927%.
Cost #2 went up by 2.69716%.
Cost #3 went up by 1.36407%.
Cost #4 went up by 3.36755%.
Cost #5 went up by 0.952423%.
Cost #6 went up by 0.426874%.
Cost #7 went up by 3.54566%.
Cost #8 went up by 4.2568%.

Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
0 | SolutionFound | -0.286358 | 699.559 | -0.542534
1 | SolutionFound | -0.126461 | 584.767 | -0.238836
3 | SolutionFound | -0.286073 | 748.278 | -0.546277
2 | SolutionFound | -0.179648 | 817.943 | -0.335588
4 | SolutionFound | -0.276992 | 705.89 | -0.527744
6 | SolutionFound | -0.266985 | 702.686 | -0.50241
7 | SolutionFound | -0.270688 | 656.83 | -0.507378
5 | SolutionFound | -0.273703 | 652.967 | -0.519965
8 | SolutionFound | -0.275451 | 590.744 | -0.515494
Time spent on extracting active (and independent rows) of A: 68 seconds

sample # | max element of abs-Pi | qi norm (this number should be close to 0)
2 | 47701450.074764 | 692.492799
3 | 29787116.474959 | 731.441437
0 | 40587133.186762 | 588.113452
1 | 47127023.179201 | 423.399492
4 | 30053612.840322 | 718.089473
5 | 30414974.612217 | 634.711274
6 | 25522103.629475 | 652.203553
7 | 29189688.335512 | 583.043129
8 | 30771100.281634 | 548.472823
Time spent on getting w in terms of theta: 264 seconds

Calculating gradient
gradient_cost norm: 122147

lambda_square = 0.384951
step_direction norm: 101607

step size = 9.84187e-09

Current time: Sat Apr 11 23:38:51 2020
************ Iteration 9 (0-time step size shrinking) *************
theta_sDDot.head(6) = -9.48808e-06 -9.99045e-06 -2.64152e-07 -1.03982e-05 -2.42849e-07  -3.3263e-09
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  1 (0) | 0.206099 | -0.050897 | 9_1_initial_guess.csv | SolutionFound | 40.136829 | 2.492472 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 0, 1, 1)
storing result...
  3 (0) | 0.182001 | -0.017260 | 9_3_initial_guess.csv | SolutionFound | 47.185234 | 2.413677 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (3, 0, 1, 1)
storing result...
  2 (0) | 0.219353 | -0.069384 | 9_2_initial_guess.csv | SolutionFound | 69.012299 | 2.576893 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 0, 1, 1)
storing result...
  0 (0) | 0.182763 | -0.055976 | 9_0_initial_guess.csv | SolutionFound | 75.606286 | 2.444750 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (0, 0, 1, 1)
storing result...
  4 (0) | 0.200737 | 0.000174 | 9_4_initial_guess.csv | SolutionFound | 31.977941 | 2.441012 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (4, 0, 1, 1)
storing result...

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.49836
cost_u = 0.400507
cost_lambda = 0.000168786
cost_lambda_diff = 0.0361922
cost_vel_diff = 0.0461865
cost_u_diff = 0.00664833
cost_q_hip_roll = 0.229871
cost_q_hip_yaw = 0.00235751
cost_q_quat_xyz = 0.0195887
total_cost (only the nominal traj cost terms) = 2.23988
  5 (0) | 0.216327 | 0.016747 | 9_5_initial_guess.csv | SolutionFound | 31.534439 | 2.475283 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (5, 0, 1, 1)
storing result...
  6 (0) | 0.181698 | 0.027231 | 9_6_initial_guess.csv | SolutionFound | 46.800803 | 2.433381 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 0, 1, 1)
storing result...
  1 (1) | 0.206099 | -0.050897 | 9_1_w.csv | SolutionFound | 24.438769 | 2.492471 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 1, 1, 1)
storing result...
  3 (1) | 0.182001 | -0.017260 | 9_3_w.csv | SolutionFound | 24.357154 | 2.413678 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (3, 1, 1, 1)
storing result...
  2 (1) | 0.219353 | -0.069384 | 9_2_w.csv | SolutionFound | 24.618280 | 2.576895 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 1, 1, 1)
storing result...
  8 (0) | 0.217063 | 0.074722 | 9_8_initial_guess.csv | SolutionFound | 78.854547 | 2.625378 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (8, 0, 1, 1)
storing result...
  7 (0) | 0.203950 | 0.025035 | 9_7_initial_guess.csv | SolutionFound | 101.134163 | 2.445129 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (7, 0, 1, 1)
storing result...
  0 (1) | 0.182763 | -0.055976 | 9_0_w.csv | SolutionFound | 23.638802 | 2.444749 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (0, 1, 1, 1)
storing result...
  4 (1) | 0.200737 | 0.000174 | 9_4_w.csv | SolutionFound | 23.591640 | 2.441010 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (4, 1, 1, 1)
storing result...
  5 (1) | 0.216327 | 0.016747 | 9_5_w.csv | SolutionFound | 24.211291 | 2.475281 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (5, 1, 1, 1)
storing result...

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.49836
cost_u = 0.400507
cost_lambda = 0.000168786
cost_lambda_diff = 0.0361922
cost_vel_diff = 0.0461865
cost_u_diff = 0.00664833
cost_q_hip_roll = 0.229872
cost_q_hip_yaw = 0.00235751
cost_q_quat_xyz = 0.0195887
total_cost (only the nominal traj cost terms) = 2.23988
  6 (1) | 0.181698 | 0.027231 | 9_6_w.csv | SolutionFound | 24.714023 | 2.433382 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 1, 1, 1)
storing result...
  8 (1) | 0.217063 | 0.074722 | 9_8_w.csv | SolutionFound | 19.135392 | 2.625377 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (8, 1, 1, 1)
storing result...
  7 (1) | 0.203950 | 0.025035 | 9_7_w.csv | SolutionFound | 23.921391 | 2.443659 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (7, 1, 1, 1)
storing result...

Time spent on reading files of sample evaluation: 2 seconds

total_cost = 2.48294 (min so far: 2.46566)

Average cost went up by 0.700961%.
Cost #0 went up by 0.249727%.
Cost #1 went up by 1.35782%.
Cost #2 went up by 3.47294%.
Cost #4 went up by 1.60968%.
Cost #5 went up by 0.0642764%.
Cost #8 went up by 6.23306%.

Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
0 | SolutionFound | -0.138688 | 886.581 | -0.247156
3 | SolutionFound | -0.124597 | 930.655 | -0.237496
2 | SolutionFound | -0.166132 | 908.592 | -0.301951
1 | SolutionFound | -0.142593 | 887.65 | -0.265737
6 | SolutionFound | -0.246604 | 769.546 | -0.46851
4 | SolutionFound | -0.129802 | 877.757 | -0.245366
7 | SolutionFound | -0.104269 | 644.004 | -0.190689
5 | SolutionFound | -0.256628 | 697.31 | -0.486053
8 | SolutionFound | -0.241053 | 564.494 | -0.441934
Time spent on extracting active (and independent rows) of A: 67 seconds

sample # | max element of abs-Pi | qi norm (this number should be close to 0)
3 | 40413062.552878 | 760.116610
2 | 44167466.003708 | 797.366733
1 | 43092394.629747 | 779.110777
0 | 42988399.657187 | 721.763509
4 | 40963469.435272 | 779.164192
5 | 33991390.399965 | 701.659277
7 | 45838996.573821 | 486.993070
6 | 24943595.697967 | 726.124537
8 | 27021292.456343 | 470.562659
Time spent on getting w in terms of theta: 263 seconds

Calculating gradient
gradient_cost norm: 99720.1

lambda_square = 0.205954
step_direction norm: 174868

step size = 5.71859e-09

Current time: Sat Apr 11 23:49:00 2020
************ Iteration 10 (0-time step size shrinking) *************
theta_sDDot.head(6) =  3.36468e-06   1.7747e-06 -3.65498e-07  3.68086e-07 -3.36119e-07  2.79099e-09
sample# (rerun #) | stride | incline | init_file | Status | Solve time | Cost (tau cost)
  0 (0) | 0.186522 | -0.049602 | 10_0_initial_guess.csv | SolutionFound | 39.786041 | 2.427597 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (0, 0, 1, 1)
storing result...
  3 (0) | 0.183643 | 0.024205 | 10_3_initial_guess.csv | SolutionFound | 46.972330 | 2.411153 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (3, 0, 1, 1)
storing result...
  2 (0) | 0.214796 | -0.027132 | 10_2_initial_guess.csv | SolutionFound | 47.227415 | 2.448770 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 0, 1, 1)
storing result...

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.46011
cost_u = 0.404652
cost_lambda = 0.000170197
cost_lambda_diff = 0.0347603
cost_vel_diff = 0.0477122
cost_u_diff = 0.00664409
cost_q_hip_roll = 0.244877
cost_q_hip_yaw = 0.00333051
cost_q_quat_xyz = 0.0187821
total_cost (only the nominal traj cost terms) = 2.22104
  4 (0) | 0.198825 | 0.002296 | 10_4_initial_guess.csv | SolutionFound | 47.831938 | 2.414127 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (4, 0, 1, 1)
storing result...
  5 (0) | 0.214881 | -0.022086 | 10_5_initial_guess.csv | SolutionFound | 46.538955 | 2.443455 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (5, 0, 1, 1)
storing result...
  6 (0) | 0.191902 | 0.025539 | 10_6_initial_guess.csv | SolutionFound | 55.840615 | 2.419359 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 0, 1, 1)
storing result...
  1 (0) | 0.194805 | -0.053917 | 10_1_initial_guess.csv | SolutionFound | 144.586183 | 2.422726 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 0, 1, 1)
storing result...
  0 (1) | 0.186522 | -0.049602 | 10_0_w.csv | SolutionFound | 24.350021 | 2.427597 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (0, 1, 1, 1)
storing result...

w_Q = 0.1
w_Q_swing_toe = 0.02
w_R = 0.0002
w_R_swing_toe = 4e-05
w_lambda = 4e-06
w_lambda_diff = 2e-08
w_v_diff = 0.001
w_u_diff = 2e-07
w_q_hip_roll = 10
w_q_hip_yaw = 1
w_q_quat_xyz = 10
cost_x = 1.46012
cost_u = 0.404653
cost_lambda = 0.000170197
cost_lambda_diff = 0.0347603
cost_vel_diff = 0.0477122
cost_u_diff = 0.00664409
cost_q_hip_roll = 0.244877
cost_q_hip_yaw = 0.00333051
cost_q_quat_xyz = 0.0187821
total_cost (only the nominal traj cost terms) = 2.22104
  8 (0) | 0.217254 | 0.071129 | 10_8_initial_guess.csv | SolutionFound | 54.625432 | 2.588786 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (8, 0, 1, 1)
storing result...
  7 (0) | 0.193038 | 0.052765 | 10_7_initial_guess.csv | SolutionFound | 62.031528 | 2.470625 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (7, 0, 1, 1)
storing result...
  3 (1) | 0.183643 | 0.024205 | 10_3_w.csv | SolutionFound | 31.895968 | 2.409445 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (3, 1, 1, 1)
storing result...
  2 (1) | 0.214796 | -0.027132 | 10_2_w.csv | SolutionFound | 31.379994 | 2.447035 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (2, 1, 1, 1)
storing result...
  4 (1) | 0.198825 | 0.002296 | 10_4_w.csv | SolutionFound | 31.553833 | 2.412319 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (4, 1, 1, 1)
storing result...
  5 (1) | 0.214881 | -0.022086 | 10_5_w.csv | SolutionFound | 31.932395 | 2.441697 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (5, 1, 1, 1)
storing result...
  6 (1) | 0.191902 | 0.025539 | 10_6_w.csv | SolutionFound | 32.362567 | 2.417724 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (6, 1, 1, 1)
storing result...
  1 (1) | 0.194805 | -0.053917 | 10_1_w.csv | SolutionFound | 31.430364 | 2.421868 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (1, 1, 1, 1)
storing result...
  8 (1) | 0.217254 | 0.071129 | 10_8_w.csv | SolutionFound | 23.170741 | 2.586330 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (8, 1, 1, 1)
storing result...
  7 (1) | 0.193038 | 0.052765 | 10_7_w.csv | SolutionFound | 23.708415 | 2.470626 (0.000000)
(sample_idx, n_rerun, N_rerun, is_success) = (7, 1, 1, 1)
storing result...

Time spent on reading files of sample evaluation: 2 seconds

total_cost = 2.4483 (min so far: 2.4483)

Cost #4 went up by 0.415428%.
Cost #7 went up by 1.10367%.
Cost #8 went up by 4.65294%.

Extracting active (and independent rows) of A...

 (After extracting active constraints) Run traj opt to check if your quadratic approximation is correct
sample# | Solve Status | Cost | w_sol norm | (this should be 0 if w=0 is optimal)
2 | SolutionFound | -0.108748 | 859.229 | -0.202553
0 | SolutionFound | -0.103402 | 915.32 | -0.193268
3 | SolutionFound | -0.0979461 | 883.613 | -0.181178
1 | SolutionFound | -0.0644159 | 376.855 | -0.113654
4 | SolutionFound | -0.0978704 | 849.681 | -0.183035
6 | SolutionFound | -0.0963357 | 846.527 | -0.176602
5 | SolutionFound | -0.10808 | 854.632 | -0.20164
7 | SolutionFound | -0.214555 | 635.46 | -0.402126
8 | SolutionFound | -0.216061 | 550.318 | -0.397229
Time spent on extracting active (and independent rows) of A: 67 seconds

sample # | max element of abs-Pi | qi norm (this number should be close to 0)
3 | 40706422.271925 | 751.132054
0 | 45907315.612187 | 783.699107
2 | 45103162.951133 | 790.584460
1 | 54015680.974954 | 168.462270
7 | 32045663.342236 | 599.667038
6 | 45011704.841865 | 703.232736
5 | 44664658.333550 | 783.110183
4 | 44486932.485602 | 707.187030
8 | 29058844.197930 | 479.677721
Time spent on getting w in terms of theta: 264 seconds

Calculating gradient
gradient_cost norm: 66070.6

lambda_square = 0.13383
step_direction norm: 205085

step size = 4.87602e-09

